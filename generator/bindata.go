// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/structfield.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\xaf\x7e\xc5\xd4\x58\x2f\x24\x57\x91\xee\x06\x72\x28\x92\xa0\xc8\x25\x09\x92\xa0\xd7\x82\x96\x46\x12\x11\x89\x52\x49\x2a\x86\x2b\xf8\xbf\x77\xf8\x21\xd9\x72\x1c\xd4\x4d\x4f\x9b\x8b\x29\xce\xf0\xf1\xcd\x9b\xe1\x43\x3a\x96\xbd\xb1\x12\x61\x18\x20\x79\x60\x0d\xc2\x7e\x1f\x04\x69\x0a\xaf\x15\x57\x50\xf0\x1a\x61\xcb\x14\x94\x28\x50\x32\x8d\x39\x6c\x76\xa0\x2b\x04\xb5\x65\x65\x89\x12\x74\xdb\xd6\x89\xc9\xbf\xcb\xb9\xe6\xa2\xa4\xe0\x78\xae\xe1\x65\xa5\xa1\x93\xed\x3b\x42\xd1\x6b\x0b\x55\xa1\x80\x5d\xdb\x83\xc4\x2b\xd9\x8b\x19\xd2\x78\x05\x64\x6d\xd3\x30\x91\x07\x01\x6f\xba\x56\x6a\x08\x03\x80\x85\x40\x9d\x56\x5a\x77\x0b\xf3\x51\x72\x5d\xf5\x9b\x84\x12\xd3\xb2\xbd\xf2\x00\xc7\x4b\x94\xb2\x95\xea\xb2\x5c\xf3\x7b\x59\x66\x56\x73\x14\xfa\xb2\x5c\xc3\xf5\x8d\xff\xb7\xe4\xf4\x9d\xd5\x3c\x27\x09\x16\x01\x1d\xa3\x86\x48\x26\xa8\x33\xc9\x2d\x16\xac\xaf\xf5\xbd\x95\x43\x51\x83\x28\xd4\x49\x2e\x74\x01\x8b\xe5\x5f\x0b\x48\xa8\x65\x36\x1f\x45\x0e\xe3\xda\x9d\xfd\xfe\x86\xbb\x18\xbe\x13\x70\x8f\xb0\xbe\x86\x64\x06\x62\xa2\xb4\x82\x13\x3c\x9f\x7e\x82\x1a\xd9\xb1\x78\xc0\x2d\x64\x12\x89\xa4\x02\x06\x82\xbe\x28\xa3\xea\xa9\x61\xfc\x6f\x9c\x26\x08\x7e\x7b\xba\x07\x27\x57\x12\x14\xbd\xc8\xcc\xb9\x50\x13\x27\x65\x5b\xea\x43\xaf\xe3\x46\x0c\x45\x2b\x1b\x46\xbc\x94\x96\x45\xa3\x93\x67\x2c\x39\x2d\x77\x11\xac\x6e\x6c\x2e\x0c\x44\x46\xa2\xee\xa5\x80\x1f\x6e\x6b\x98\xf0\xd6\xa0\x3f\x20\xad\xc7\xc5\x3e\x30\x03\xbd\x0a\x88\x27\x2f\x20\x79\xe9\x69\xba\xe4\xce\x09\x30\xff\x32\xe1\x5b\x54\x99\xe4\x9d\xe6\xad\xb0\x2f\xc1\x24\xcd\xf7\x26\x45\xcc\xa2\x56\x78\x7a\xcc\x01\x7f\x3c\x63\x52\x5d\xeb\x98\xca\xa8\xd1\xc7\x72\x7d\xa6\xe1\x41\xfd\x55\x1a\xe8\x5d\x87\xe0\xd5\x20\x6d\xfa\xcc\x89\xf2\xb9\xaa\x14\xfc\x44\xd6\xc0\x55\xe6\xe7\xeb\xb1\x33\x0f\x8f\x98\x9a\xb1\x48\x57\x3f\xbd\x50\x76\xe0\x42\x36\x8e\x4e\x04\x67\xb1\xc2\x8e\x49\xd6\xa8\xf3\xc1\x27\x1b\xb3\x27\x9d\x16\x59\x86\x4a\x3d\x23\xe9\x2a\x46\x7a\x67\x02\xc9\x4b\x56\x61\xc3\x0c\xfa\xca\xa9\x76\x2e\x9c\xfc\xde\xbe\x9a\x5e\xee\xf7\xf1\xe1\x7d\x59\xcb\xfa\x37\xd4\x68\xa6\xa9\x5d\xd8\x19\x30\x7e\xfd\x78\xfb\xb8\x86\x3f\xbc\x83\x58\x67\xf5\x05\x6e\x90\xa6\x80\x7c\x96\xf2\xc9\xa0\xbd\xb5\x7c\xad\x2a\x89\x8a\x8c\xe8\xd0\xa4\x3f\x87\x81\x50\x8f\xd8\xc4\x40\x75\x18\xa3\x61\xc9\x34\x97\x04\xb7\x69\xb8\x0e\x4f\x5d\xcb\x4b\x1d\xc3\x0f\x47\x94\x16\x67\x7b\xf1\x8c\x2c\x47\x39\x4c\xef\x9a\x25\xe3\xcb\x8e\xa8\x16\xe2\x6b\xae\xfc\xe5\x1a\x04\xaf\xad\x18\x93\x4f\x7c\xb9\x4c\x42\x32\x9d\x99\x97\x46\xb7\x10\xf8\x3e\xf8\xff\xf0\x4e\xc5\xe4\xb2\x11\x89\x8e\x66\x64\x5a\x10\x41\x7a\xc2\x87\xa1\xf7\xce\x4c\x0f\xe1\xce\x8c\xd1\x89\x43\x1b\x33\xb6\xe3\x35\x59\xf1\x98\x18\xb6\x9d\x15\x99\x3c\x81\x46\x23\xa6\xca\x7c\x11\xd4\x26\x94\x05\xcb\x70\xa0\xfe\x64\x6d\x6e\x77\x22\x98\x2e\x18\x82\x6f\x5e\x85\x71\x8b\x76\xbe\x4d\x46\x62\x40\xd7\xe0\xc0\x63\x0a\x8c\xd5\xad\x01\x5c\x7f\xdc\xa7\x09\xdd\x10\xb8\xdf\x36\x7f\xe6\x2e\xda\x76\xa6\x9d\x1e\x2e\xdc\x4a\xd6\x51\x3d\xc2\x15\x02\x0d\xa5\xd5\xf4\x99\x43\xc6\x3a\xe2\x41\xb5\xda\xff\x25\x34\xd3\xbd\xb2\x20\xce\x2e\xa7\xf3\x93\x61\xce\x49\xfa\xca\x83\x89\xa1\xa7\x71\x54\x7f\x60\x29\x1e\x18\x52\xc8\x90\x1b\x4d\x66\xbc\x21\x02\xa7\x68\xe4\x21\x8f\x24\x32\xce\xfb\xe2\x46\x3f\x5c\x2c\x15\x84\x9e\xe6\x32\x8f\xd6\xb0\xfc\xf5\x1d\x16\x31\x0d\xf5\x8c\x97\xd9\x30\xd7\x9a\xdf\x91\x5a\x44\xd7\xfe\x13\x00\x00\xff\xff\xa4\x6a\xad\x92\xae\x09\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2478, mode: os.FileMode(420), modTime: time.Unix(1445316695, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\x8c\x56\x45\xea\xa2\xd6\xb9\x23\xf5\x04\x08\x71\x29\x08\xf5\x0f\xb8\xc9\xc4\xb1\x36\xb1\xc3\x78\xdc\x55\x58\xed\x7f\x67\x9c\x0f\xb4\x59\x05\xb1\x9c\x32\x8e\xdf\x7b\x7e\xf3\xc6\xee\x4d\x79\x30\x16\xe1\x74\x02\xfd\x7d\xae\xcf\x67\xa5\x8a\x02\x5e\x1a\x17\xa1\x76\x2d\xc2\xd1\x44\xb0\xe8\x91\x0c\x63\x05\xaf\x03\x70\x83\x10\x8f\xc6\x5a\x24\xe0\x10\x5a\x9d\xf1\x9f\x2b\xc7\xce\x5b\xd9\x5c\x78\x9d\xb3\x0d\x43\x4f\xe1\x0d\xa1\x4e\x3c\x4a\x35\xe8\x61\x08\x09\x08\x1f\x29\xf9\x95\xd2\x72\x04\x94\xa1\xeb\x8c\xaf\x94\x52\xae\xeb\x03\x31\xdc\x2b\x80\x9d\x47\x2e\x1a\xe6\x7e\x97\x17\xd6\x71\x93\x5e\xb5\x20\x0b\x1b\x1e\x67\x85\xcb\x32\x23\x0f\x8e\x33\x38\x97\x65\xeb\xd0\xf3\xed\xbc\x62\x22\xdc\x76\x56\xfe\xde\x86\x44\xa2\x40\xf1\xbf\x3a\x28\xde\x4c\xeb\x2a\x89\xe5\x36\xd6\xe2\x5b\xc0\x32\x53\x32\x5e\x06\xaa\x3f\x61\x6d\x52\xcb\x5f\xc7\x34\xa3\x0c\x58\xb6\x7a\x72\x9e\x6b\xd8\xbd\xfb\xb9\x03\x2d\x23\x1f\xf1\xe8\x2b\x58\xea\x89\x7b\x77\xc0\xe1\x01\xee\xc4\x44\x42\xf8\xf0\x04\x7a\x25\x92\x77\xa5\x82\x2b\xbd\x19\x7e\xa5\xba\x1f\xaf\xd5\x33\x1e\xa1\x24\x94\x86\x22\x18\xf0\xb2\x12\x44\x93\x64\xe0\xee\x97\x58\x7d\x36\x5d\x26\xc2\xd4\x87\xaa\x93\x2f\x33\xe5\x9e\xc5\x4e\x1c\x2f\xc3\xb4\xa3\x5f\x96\x1f\x0f\x50\x07\xea\x8c\x58\x8a\x4c\x75\xc7\xfa\x07\x5a\x27\xe5\xb0\x87\xf7\xd9\x97\x89\xa5\x24\x78\xa9\x7d\x12\x5b\xa2\x92\xdb\x91\xf3\xef\x37\x41\xfb\x55\x80\xdf\xfa\x7c\x33\x5d\xf0\x5f\x28\xa4\x3e\x4e\x9d\x89\x84\xde\x3e\xe0\x69\x7c\x4f\xf3\x4a\xaf\xec\xff\x71\xbb\xbf\x4a\x9c\x90\x13\xf9\x2c\xaa\xa6\xf7\xb7\x2d\xed\x72\x6a\xf3\x6d\x16\xa5\xcd\xf0\x14\x0f\x3d\xfe\x85\x2f\xc1\xa4\x92\xc7\x08\xfe\xd1\xde\x36\x3f\x47\x5a\x4a\xbd\xfa\xab\x3f\x4e\xd3\xba\xec\xe8\xac\x7e\x07\x00\x00\xff\xff\x53\x27\x68\x9e\x5c\x04\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x5d\x6f\xdb\x36\x14\x7d\xd7\xaf\xb8\x33\x3a\xc0\x0e\x52\x79\xcf\x1b\x32\xa0\xed\xd2\x2d\x7b\x18\xb2\x2e\xe8\x1e\x8a\x62\x60\xe5\x6b\x89\x88\x24\x2a\x24\xe5\xcc\x33\xfc\xdf\x77\x2e\x29\x79\x96\xed\x78\x0a\x30\x60\xc8\x93\x28\xf2\x7e\x9c\x73\xee\xe5\x47\xa3\xb2\x7b\x95\x33\x6d\x36\x94\xde\x76\xe3\xed\x36\x49\xe6\x73\xba\x2b\xb4\xa3\xa5\x2e\x99\x1e\x95\xa3\x9c\x6b\xb6\xca\xf3\x82\xbe\xac\xc9\x17\x4c\xee\x51\xe5\x39\x5b\xf2\xc6\x94\xa9\xd8\x5f\x2f\xb4\xd7\x75\x8e\xc5\xde\xaf\xd2\x79\xe1\xa9\xb1\x66\xc5\xb4\x6c\x7d\x08\x55\x70\x4d\x6b\xd3\x92\xe5\xd7\xb6\xad\x07\x91\xfa\x14\x94\x99\xaa\x52\xf5\x22\x49\x74\xd5\x18\xeb\x69\x9a\x10\x4d\x6a\xf6\xf3\xc2\xfb\x66\x22\x3f\xb9\xf6\x45\xfb\x25\x85\xe1\x3c\x37\xaf\xbb\x00\xfb\x43\xb1\xbc\xd7\x7e\x9c\xb1\x7c\xc7\x59\xb2\xb5\xc6\xba\x67\x41\x98\xaf\x54\xa9\x17\xa0\x35\xce\x2b\x2b\x35\xd7\xc0\x0d\x63\xd4\xc4\xaa\x1a\x05\x49\x7f\xe0\xa5\x6a\x4b\x7f\x13\xe4\x70\x28\x10\x96\x1a\xab\x6b\xbf\xa4\xc9\xd7\x0f\x13\x4a\x51\xb2\x60\xcf\xf5\x82\xfa\x71\xf4\x7d\x75\xcf\xeb\x4b\x7a\x05\x10\x2d\xd3\xb7\x57\x94\x0e\x82\xc8\x2a\x46\x74\x10\xaf\x33\x3f\x88\x3a\x43\x5b\x5c\x24\x62\xaa\x5c\x06\x52\x7f\x01\xd9\x2f\xaa\x12\xbb\x5b\x65\x55\xe5\x50\xb8\xda\x2b\x5d\x3b\x52\x65\x19\x4a\xdb\xc8\x3c\x7b\xb6\x0e\x7d\x42\x4e\x02\xe1\x2b\x2b\x6f\x6e\x6f\x24\x6e\x63\x90\x35\x59\x1a\x1b\x26\x11\xbb\x68\x51\xfa\xfd\xd0\x64\x1a\xe9\x0a\x6d\xd0\x2c\xeb\x46\x23\x71\x19\x1a\xd0\x31\x29\x8b\x86\xb2\xda\x7b\xf4\x14\xc2\x2a\x12\xc9\xd3\x0f\xfc\xd0\xb2\xf3\xc9\xc5\x3c\x81\x43\x08\xfa\x24\x60\xe7\x6d\x9b\x79\xda\x0c\xd4\xee\xd6\x44\x20\xbd\x14\xf1\x5d\x66\x75\x13\x10\x6c\xb7\x50\x20\xd8\x1e\x4c\x63\xf2\x62\x7e\x50\x80\xe3\xac\xc1\xf1\x47\x73\x27\xb0\x0e\xc4\x8d\x7b\xee\x77\xb0\xe1\x3b\xd3\x51\x08\xe4\xd8\x75\x6c\x9b\x08\x2b\x10\xed\xb7\x8c\xed\xb8\x2e\xdb\x3a\xa3\xa9\x44\xff\xc0\x19\xeb\x15\xdb\x3e\xe3\xc5\x19\xfa\xb3\x83\x7c\x53\x4b\xb1\xfd\x7a\x0d\x2f\x91\x20\x17\x91\x96\x95\xcc\xe5\x1a\xc3\xf5\x8c\xc2\x2e\x80\x68\x20\xb0\x52\x02\xc2\xd1\xa7\xcf\x61\x32\x50\x1a\xc8\xd8\xd1\x84\x90\xb5\xf1\xe8\x3e\xf7\xc6\x5a\xb5\x0e\x67\x4c\xa0\x2f\x0a\xdf\xb8\x5f\x5b\xb6\xeb\xe0\x10\x75\x81\x14\x0f\x32\x15\x49\x07\xd9\x3a\xe4\x58\x84\x0b\x92\x49\x33\xdb\xf4\x37\xf6\xff\xf8\x4e\x0f\xb7\x45\xe7\x73\xd9\x27\x7a\x6f\x6c\xa5\xd0\x2e\x36\x76\xff\xe0\x3f\xa8\xf7\x51\xfa\xfe\xfa\xcf\x06\x94\x5c\x2c\xec\x4c\x4a\x54\x3a\xee\x3c\x8e\x0d\x36\x1b\x54\x10\x76\xdf\x05\x50\x5f\x5d\x51\xad\xcb\xd0\x50\x04\x61\x7c\x6b\x6b\x99\xc7\x6f\x5f\x6e\x89\x15\x49\xdf\x2a\x5f\x0c\x39\x37\x98\x19\x43\x79\xe7\xf9\xc2\x18\xff\xc4\x6a\xc1\x76\xc8\xb9\x08\x73\x63\x58\xef\x79\xbf\x30\xde\x92\x7d\x8f\xf5\xae\xed\xdf\xe3\x4a\x1c\xaa\x81\x93\xb0\x8a\x97\xe7\x08\x41\x76\xee\x67\xe5\x38\x45\xf5\x39\x14\x06\xd0\xc6\xa0\xea\xc9\xbe\x88\x22\xc5\xd3\xf7\xf8\x67\xaf\x7a\x27\x4e\xac\x77\x85\x2e\x17\x03\xbc\x72\x10\x86\x5b\xd3\x9d\x3e\xf9\x3f\x7d\xc6\xd9\x89\xe7\x11\x62\xc8\x6d\xf7\xc7\x25\xad\x82\x62\xe1\xac\x3c\x4d\xa5\x83\xbd\x8b\x1a\x4f\xd4\x3e\xe0\x15\xa9\xa6\x01\xe2\xe9\x99\xac\xb1\xfe\xc7\x60\xa7\xab\xd9\xec\xa8\xca\xe7\xd0\x03\xe9\x69\x8c\xc7\xcf\x8e\x7f\x39\xd0\x55\x10\xf3\x3f\x3a\xd6\xe5\x1a\x4c\x7f\xc6\x13\xe2\xed\x3a\xd2\x3b\x2f\xc6\x64\xb3\x49\xdf\x99\xb2\xe4\x4c\x6e\xed\xe8\xb1\xdd\x4e\x66\x69\x9a\x3e\x77\x53\xe3\x79\x7a\x62\x63\xf7\xbb\x64\x34\xc9\x11\x7b\xe5\x7f\xe0\xf8\xd4\x9e\x88\xa5\x7d\x6b\x16\xb1\x2e\xa7\x08\xed\x16\x9f\xda\xbf\xe3\x30\x84\x3d\x3c\x18\x21\x4f\xc9\xf5\x14\x91\x66\xf4\x3d\x7d\x73\xe4\x8a\x67\x39\x78\xe3\x6d\xeb\xf0\xa2\xf9\x18\x9f\xdc\x48\x79\x2d\x2b\xe2\x25\xfc\xbb\xf0\x9d\x13\x00\xe0\xd5\xf5\x77\x00\x00\x00\xff\xff\x8c\xa5\xa1\xa5\x01\x0d\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3329, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdd\x72\x9b\x46\x14\xbe\xe7\x29\x4e\x19\x37\x23\x3c\x04\xf5\x3a\x9d\x5c\xb4\x4e\x26\xd5\x4d\xea\x71\xf2\x02\x6b\x38\xc0\xd6\xb0\x4b\x77\x17\xab\xaa\x46\xef\xde\xb3\x3f\x08\xb0\x90\xac\xa4\x37\xf1\x8d\xf0\xf9\xfd\xce\x77\x76\x3f\xd8\xef\xa1\xc0\x92\x0b\x84\x38\x6f\x38\x0a\xa3\x50\x77\x52\x68\x8c\xe1\x70\x58\xdf\x46\xe4\xe7\x25\x64\x1f\x50\xe7\x8a\x77\x86\x4b\x41\x76\x32\x9e\x58\xb0\xd1\xe8\x3c\x1d\xd3\x39\x6b\xf8\xbf\x08\xd9\x67\xd6\x22\x39\x81\xac\x75\xdf\x32\x31\x35\x52\x86\x28\x0e\x87\xe8\x76\x1d\x99\x5d\x87\xb0\x9c\xa9\x8d\xea\x73\x03\xfb\x08\x6c\x80\x62\xa2\x22\xe7\x1f\xc8\x0a\x54\xda\x15\x39\x05\xb7\x5e\xc3\x12\x3e\xa0\x76\xf4\xe0\x0b\x2d\x63\xcc\x3e\xc9\xaf\x16\xca\x10\x35\xcd\xb0\x7d\xbe\xe4\x35\xb6\xcc\x9b\xee\xd9\xae\x91\xac\x98\xbb\xb2\x8d\xbe\x93\x6d\xd7\xe0\x3f\x7f\x3e\xfe\x85\x84\xfb\x70\xb8\x3d\xd6\xb1\x0d\x42\xd8\x72\x9f\x43\x14\x95\xbd\xc8\x61\x65\x23\x1f\x30\x47\xfe\x8c\x6a\x80\x77\xbb\x88\x3a\x01\x45\x5c\x3c\x84\x95\xad\x86\xdd\x81\x5f\x65\x36\x38\x52\xc8\xe9\xa7\x6f\x51\x41\x6d\x4c\xf7\xc4\x4d\x76\x17\x0c\x29\x94\x52\xb5\xcc\x68\x4b\x75\xd9\xda\x9c\x8a\xd3\xe3\x2e\x01\x54\x4a\xaa\xb3\xd4\x93\x99\x98\x3e\x76\xac\x9d\x83\x22\x1d\xb4\x30\x99\x65\x86\x1a\xd1\x18\x06\x95\x63\x20\x27\xe7\x6c\x82\xd4\xb6\x81\x77\xef\x6d\xe6\x24\xf4\x38\x4a\xf6\x09\x8d\x6f\xba\x8a\x2d\x2f\x21\x2d\x4e\x12\xea\x40\xf5\x6d\xf6\x4f\xef\x41\xf0\xc6\x21\x05\x42\x64\x7a\x25\x3c\x78\x9d\x6d\xc4\x33\x31\x56\x58\xba\x1d\xad\xf7\xcc\xd4\xae\x6b\xec\x01\xc7\xf4\x34\xdb\x3c\x19\xae\x6a\x1d\x56\xf7\x72\x4f\xd9\xf2\xe1\xb2\xe3\x9d\xce\xee\x4a\x1c\xef\xcd\xd5\xa5\x5e\xc5\xe7\xeb\xba\xdb\xf5\xea\x39\x9e\xee\xb0\xf3\x67\x7a\x24\x96\xd6\x32\x1c\x9c\xe1\xc0\x8c\x8b\xf9\x5d\x16\xbb\x55\x92\x86\xa2\x42\x9a\x0b\xb7\xe0\x8d\x47\xb1\x3c\x67\xb8\x4a\xc9\xaf\x97\x96\x39\x52\x7e\x9c\x26\x38\x29\x9a\xae\xce\xd1\xd1\xb1\xfc\x89\x55\x4e\x4f\xa8\xb2\x7f\xa6\xf0\x88\x06\xfd\x5a\x73\x0d\x25\x6f\x10\xb6\x4c\x43\x85\x02\x15\x33\x58\xc0\xe3\x0e\x4c\x8d\xa0\xb7\xac\xaa\xe8\x0c\x1b\x29\x9b\xcc\xc6\x7f\x2c\xb8\xe1\xa2\x22\xe7\x90\xd7\xf2\xaa\x36\xd0\x29\xf9\x8c\x50\xf6\xc6\x95\xaa\x51\xc0\x4e\xf6\x04\xe7\xad\xea\xc5\xac\xd2\xd0\x82\x58\x6c\x49\xfe\x8a\x28\x8a\x78\xdb\x49\x65\x60\x45\xf8\x63\x81\x66\x6d\xef\x63\x6c\xff\xa9\xb8\xa9\xfb\xc7\x8c\x22\xd7\x95\x7c\x1b\x2a\x4c\x1f\xc3\xcd\xbd\x2e\xd8\xfe\x5e\x17\xe9\x2f\xca\x37\x41\x58\xbb\x3b\x45\x73\x5d\x97\xe5\xc5\x28\x8e\x66\x42\xf2\x01\x4b\xd6\x37\x66\xe3\xe8\xf0\x52\x4e\xbc\x72\x61\x4a\x88\x7f\xfe\x3b\x86\x6c\xe9\xf0\xfa\xdc\x9b\x27\xdc\xa5\x70\x43\x20\x7a\xb4\x47\x34\x9b\x15\xb1\xde\xa0\xe7\xd3\x7a\x21\xfc\x45\xd5\x24\xba\xf0\xf2\x79\xf0\x92\x36\x79\x05\x9d\x91\xca\xef\x51\x6e\x5f\x3c\x81\x87\xff\xa9\xdf\x09\xac\x68\x48\x54\x25\xcb\x71\xef\xd5\x54\x92\xd1\xa2\xd5\x5b\x6e\xf2\x7a\x94\x8b\x3b\x59\xe0\x2a\x99\x0b\xfa\x09\x97\x43\xcb\x20\xf1\x40\xaa\xa5\x1d\x3f\x81\xd7\x77\xce\x08\xf0\xcc\x94\xad\x4c\x2b\x9c\x93\xe7\x4b\x4d\x14\xce\xfe\x8d\x72\xe2\x53\xb2\xc5\xb7\xd6\x38\xa5\x13\x95\x9b\x13\xa1\x08\xf4\x2f\x09\xc5\x44\x2c\xc8\x98\x06\xc5\xb0\x7f\x03\x86\xe0\xf5\x6a\x15\x50\x6e\xf4\x97\x3e\xcf\x51\xdb\x61\xdf\x78\x68\xa9\xcd\x1f\x54\xd9\x95\xfa\x8c\xdb\xdf\xee\x37\x1f\x2d\xaf\x4e\x67\xe7\x13\xd2\xfb\xe2\x98\xf9\x82\xe9\x64\x2a\xc2\x83\xfa\xf9\xef\x15\x77\xf6\x07\x02\xfc\xb9\xa5\x65\xd5\x4b\x2e\x07\xbf\xf0\xe6\xd7\xc8\xff\xd1\x69\xff\x3e\xc2\xbf\x81\xea\xc9\xc7\x96\x2f\xb8\xc4\xde\x14\xf0\xac\x57\x2f\x9e\x84\xdc\x86\x6f\x87\x38\xf5\x11\xbf\x24\x53\x11\x72\x5f\x69\x57\xde\x1e\x0a\x33\x48\xef\x41\xfb\x02\x38\xf9\xb8\x1e\xf5\x68\x2c\x7f\xf6\x78\x5c\x2e\x75\x26\x21\x14\xfd\x2f\x00\x00\xff\xff\x98\xdf\xe4\x83\xe1\x0b\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 3041, mode: os.FileMode(420), modTime: time.Unix(1445316695, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x49\x2d\x52\x52\xd0\x53\xa8\xad\xe5\xe2\xd2\xd7\xe2\x42\x91\x4d\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x87\x2a\x28\x2e\x4f\x4c\x4f\x4f\x2d\xb2\xca\xcd\x4f\x49\xcd\x51\x00\x2a\xd5\xf3\x4b\xcc\x4d\x05\xc9\x68\xe9\xa3\xea\x2c\x4e\xce\x48\xcd\x4d\x84\x99\x0b\x94\x2a\x4a\xcc\x4b\x4f\x55\xd0\x73\xad\x28\x29\x4a\x0c\x06\x4b\x16\x83\xa4\x68\x64\x23\x50\x26\x35\x2f\x05\xc4\x02\x04\x00\x00\xff\xff\xab\x63\xcf\xcc\xee\x00\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 238, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x4b\x8e\xc2\x30\x0c\x86\xf7\x3d\x45\xd4\x03\xf4\x0e\x33\xb3\x99\xd9\x0c\x48\x54\xec\x4d\x63\x44\x50\xda\x44\x89\x41\x94\xaa\x77\xc7\x26\x94\x47\x5b\xc4\x2e\xf9\x1f\x9f\xed\xae\x53\x66\xab\x5c\x50\xc5\x5f\xfc\x71\xb5\xb7\x78\x5a\x6c\xf6\x58\x91\x08\xe5\x81\xff\xf2\xf8\xd2\xda\x90\x71\x0d\xd8\x65\x70\x1e\x03\x19\x8c\xaa\xef\x53\xb9\xf8\x87\x1a\xf9\x47\xad\x47\xc5\x92\x87\x58\x81\x35\x67\xbc\x3b\xa2\x62\xa3\x53\x83\x90\xa7\x00\xa1\xca\x63\xb5\xc3\x1a\xbe\x9d\x6e\x73\x55\xb0\x99\x49\xcc\xc6\xcf\xac\x31\xa2\xe4\xf4\x13\x62\x98\x24\xbb\x0d\x47\x24\xeb\x51\x24\x51\x57\x18\xcc\x95\x1e\x46\x0b\xa4\xe6\x9b\xab\x5f\x41\x30\x13\x9a\xe5\xde\xb6\x12\xf4\x2f\xc4\x35\xfb\x1a\xa4\x38\x45\xa6\xa3\x8e\x29\xe1\x26\x8c\xec\x12\x00\x00\xff\xff\x15\xc0\x80\x62\xb4\x01\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 436, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x92\x3f\x4f\xf3\x30\x10\xc6\xf7\xf7\x53\x9c\xa2\x77\xaa\x44\xba\xb3\x15\x21\x41\x97\x82\x44\xc5\x52\x21\xf5\x88\x2f\xc5\xc8\xb1\xad\xd8\x19\x42\x94\xef\x8e\x93\x6b\x9a\xa4\x34\x50\x31\xb0\xc0\xe6\x3f\xbf\xbb\x7b\xee\xee\xa9\x2a\x10\x94\x4a\x4d\x10\xb9\xe4\x85\x32\xbc\x32\xa2\x8c\xa0\xae\x9d\xcf\x8b\xc4\x43\xf5\x0f\x20\x30\x39\xea\x1d\x41\xbc\x50\xea\x2e\x0d\x9f\xfc\x28\x53\x88\x97\x6e\xa1\x8d\x2e\x33\x53\xb8\xf0\xde\x93\xf7\xb9\xb1\x94\x7b\x49\x6e\x88\xff\x0f\xfc\xba\xb0\x8a\x98\xf5\x94\x59\x85\x3e\xd4\xf6\xcd\x63\x2a\x49\x89\x08\x62\xfe\x24\xe5\x18\xeb\x29\xd6\x74\x84\x69\x71\xa8\xc0\xe7\xbd\xb2\x5b\x74\x0b\x21\xa4\x97\x46\xa3\x1a\xc9\x99\xcf\x60\x54\x5c\x98\x24\x64\x96\x7a\x17\x92\x4e\x84\x8c\x78\xcb\x3f\xe5\x23\x2a\x29\xb0\xa1\xaf\x4d\xf2\xf0\x59\x86\xba\x86\xd9\x9c\x35\x5a\x74\x49\x88\x7b\xa3\xd3\x64\xbc\xc2\xac\x69\x1b\x32\xb4\x1b\x56\xf5\x34\x2a\xce\x5b\x5a\x97\x96\xa6\xd5\xc2\xf6\xd5\x19\x7d\x19\x5d\x44\xdb\xa6\x66\x18\xcb\x70\x65\x7d\xd0\x32\xa4\x3d\x7f\x20\x1d\xfd\xad\x59\xb4\xc1\x5f\x8d\xa1\x85\x0e\x13\xd8\x9c\xd5\x78\xa7\x6a\xd0\xf3\xd0\x0c\xfb\x33\x7b\xa9\xbd\xb0\x6b\x57\x85\x52\xf8\xdc\x1a\x71\x36\x74\x4e\x7c\x63\x9a\x12\x53\xde\x6a\xcf\x1f\x2c\xfe\x63\x0e\x3f\xda\xe4\x9f\xc5\x4f\xaf\xfb\xf7\xb9\xbc\xee\xbc\xf1\x1e\x00\x00\xff\xff\xd9\x41\x2b\x8f\xd0\x05\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 1488, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1445053809, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4b\x6f\x1b\x37\x10\xbe\xfb\x57\xb0\x42\x5a\x48\x89\xb0\xc9\xa1\xe8\xa1\x69\x0a\x18\x85\xdb\x1a\x4d\x9a\x20\x49\x7d\x09\x82\x9a\x96\x28\x6b\x83\x7d\xc8\xcb\x5d\x57\xaa\xa0\xff\xde\xe1\x73\xb9\x5c\x72\x1f\xd2\x5a\xb5\xdd\xfa\x62\xf1\x35\x9c\x6f\xe6\x9b\xe1\x90\xd2\x76\x3b\x27\x8b\x30\x21\x68\xb4\xca\xc2\x38\xcc\xc3\x5b\x68\x92\x68\x7e\x8b\xa3\x70\x8e\xf3\x34\x1b\xed\x76\x27\xdb\x6d\xb8\x40\xc1\x7b\x72\x53\x84\x19\x99\x43\x07\x34\x49\x96\xa1\xef\x5f\x21\x39\x8f\xe8\xd1\xf1\x76\x8b\x82\x77\x38\x5f\xa2\xdd\x6e\x8a\xa0\x01\x72\x93\x7c\x81\x46\x5f\xdf\x8c\x50\xf0\x3a\x9d\xe1\x3c\x4c\x13\x35\x08\x82\x92\x34\x47\xc1\x39\x3d\x4d\xd2\x64\x13\xa7\x05\x85\x21\x26\xe2\x97\xf4\xe3\x66\x45\xa0\x01\x02\x49\x32\x67\x9d\xc1\x05\x8e\x0a\x72\xb6\x5e\x65\x84\x52\x10\xc2\x27\xba\x25\x4c\xe4\xa2\xc9\x4b\xae\xe8\x57\xaf\x50\x12\x46\x68\x7b\x82\x50\x46\xf2\x22\x4b\x58\xef\x09\x03\xc6\x67\x49\x80\x6f\xc2\xe4\x35\x49\xae\xf3\xa5\x1b\xa1\x1e\x1e\x8b\x6d\x15\x4a\x03\x30\xc8\x8b\x28\xd9\xed\x46\x23\x29\xb9\xc5\x02\x34\x87\xa1\xeb\xb1\x0b\xda\x84\x2d\x35\x55\xea\x07\x05\xaf\x1b\xa1\xa8\xe1\x63\x42\x29\x55\xea\x05\x05\xf4\xc9\x49\x96\xb8\x81\xc8\xc1\x63\xc1\xb8\x84\x7e\xad\xcf\x65\x5f\x72\x85\x71\x11\x7b\xa9\xc5\x06\x87\x83\xb1\x88\x52\x9c\x7f\xf7\x6d\x33\xb3\x84\x3e\xbc\x75\xb6\x9e\x45\x05\x85\xe0\xd7\xdd\x7d\xe9\xd6\x00\x4e\x0c\x1e\x15\x9c\xd2\xc7\x02\xa7\xba\xfb\x81\x2b\xa2\x3c\x5c\x45\xe4\xed\xc2\x83\x4f\x8f\x1f\x15\xa2\xa1\x55\x2f\x38\x67\x89\xe5\x28\x10\xf6\x9e\xcc\x08\xd8\x27\xfb\x1d\xc7\xa0\x64\xa0\xa0\x31\x15\x31\x9d\x41\xeb\x6f\x82\x02\x36\x28\x50\x19\x9d\x1f\x8a\xc5\x22\x5c\x43\x37\x13\x3b\x1c\x7e\x27\xee\xae\x28\xd5\x7f\x75\xb2\xd1\x28\x9c\x91\xfa\x81\x96\x66\x3c\x2a\xcf\x73\x12\x53\x4e\x61\xf1\x89\x0f\xc3\x79\x92\xcc\xc9\xfa\x02\x67\x35\xc4\xd2\x0c\x1f\x58\x03\xac\x07\x08\xc0\x4f\x11\x49\xdc\xbe\x9a\xd4\xd3\x00\xdf\xc6\x9b\x07\xf8\xe8\x90\x86\xec\x06\x45\xe5\x04\xa9\x5c\xdf\xe8\x6f\xc2\x24\x47\xff\x2d\x4c\x5a\xb9\x5e\x98\xfe\x48\xc2\x9b\x82\x34\xc0\x32\x26\xdc\x13\xda\x0f\x11\xdc\xf7\x25\x8a\xa5\x0a\x2a\x22\xcd\x66\xf0\x2b\xa6\x17\x02\x03\x08\xe4\xf1\xba\x80\x50\x86\xbd\x14\x27\x76\x3b\x86\xfc\xc5\x4b\xab\xef\x07\xe4\x8d\x52\x6b\xea\xb3\x67\xa0\xd8\x76\xfb\x57\x08\xa8\x03\xc5\x01\x04\x73\xe0\xe3\x2a\x02\xdb\xb1\x6a\x39\x5d\x91\x2c\xdf\x94\x69\x05\x05\x46\xf2\xd9\x69\x1c\x76\x52\x42\x2a\x2b\xc5\x78\x65\x2c\x16\x63\xca\x85\xc8\xf2\x21\xaa\x38\x11\x1d\xdb\x8b\xc8\x36\x19\xea\xe0\x47\x04\xb2\x4b\xd7\x81\xd3\x4e\xe7\xf3\x90\x09\xc5\xd1\x3b\x61\xbc\x90\x94\xbe\x45\x81\x6b\xd8\xef\x6b\xe7\xec\xdf\xc8\x46\xbb\x3f\xc3\xc9\x35\xf1\xe8\xce\xd5\x85\x21\xe1\x60\x8f\x5e\x62\x4a\xab\xc7\xf9\x2c\x01\xd5\x82\xad\x3e\xd8\xc7\x51\x7a\xf5\x85\xcc\x72\xf3\x3c\xf2\x5e\x63\xaa\x81\x5c\xe3\x6d\x20\x6d\x43\xc6\x60\x95\x18\xe7\xb4\x83\x53\xc0\xf5\x92\x6c\xc2\x42\xc1\x69\x14\xbd\x5d\x54\xbb\xaa\x76\x68\xb5\x82\x9c\x24\x8d\x50\xf9\x34\x80\x40\x1d\x49\x60\x0b\x0c\x3d\x60\xa2\x8f\x05\x14\x3e\xa6\xe3\xf4\xc9\xfd\xfc\xb9\xca\xd0\x50\xc5\x23\xac\x27\xa0\x90\xcf\xa0\xcb\xb4\x88\xe6\xe8\x3a\x45\x4b\x92\x91\x93\x5a\x90\x96\x77\x61\x5b\x29\x9d\x61\xcf\xe9\x3b\x75\x51\x16\x6e\x36\xa1\xb8\x6f\xd0\x2a\x33\x30\xd3\x0b\x11\x3f\x15\x34\x4f\xe3\x9f\xb9\xd3\xe0\x32\x61\x0b\x9a\xf1\x61\xe1\xd3\x26\x31\xa7\x59\x86\x37\xf6\x62\xab\xda\xa9\xaf\x7a\x83\x57\xd6\x92\x6a\x2a\x92\xe6\x57\x2b\x58\x99\x04\x1a\xa7\x30\x99\xac\xdf\x72\xee\x1a\x3e\x38\x6f\x08\xeb\x72\x03\x9b\xf2\x7c\x8f\x86\x82\x6d\xb6\x24\x31\xae\x64\x47\x2b\x39\xde\x62\x96\x05\xd0\x0c\xf2\x5d\x2d\xf3\xa1\x4f\x9f\x21\x95\x91\x6c\x81\x67\x64\x0b\x09\xa3\x48\x66\x68\xec\xc8\xa1\xe8\x69\x3d\x79\x42\x5e\x43\xed\xa9\x75\x05\x89\x74\x8a\x22\x95\x24\xc5\x9d\x71\xca\x16\x16\xa4\x9a\x34\x04\x12\xf6\x92\x21\x30\x4f\x58\x24\xb2\x0c\x06\xa1\x09\x78\xbc\x10\x5e\x95\x11\x8c\x10\x03\x0b\x31\x0f\xb8\x1a\x65\xf3\xb9\x65\xc2\xf8\x42\xd3\x04\xaa\x94\x18\x67\x74\x89\xa3\xf1\xa7\xcf\x57\x1b\x48\x14\x70\x83\xe5\x23\xda\x94\x97\x70\x9d\xf8\x06\xa4\xd7\x53\x07\xfb\x33\xd2\x07\x6b\x8a\x3d\x58\x0a\xfe\x13\xe0\x96\x69\x96\x69\xa7\x96\xf8\x31\x21\xbc\x5a\x81\xab\xc7\xbe\x19\x20\x72\xa2\xb7\xd9\x95\xc9\x4b\xd7\x5c\x0e\xe3\x4b\xab\x4f\xbd\xdb\x4e\x1c\x87\x11\x4f\x17\x12\xbf\x8f\x49\xe5\x9c\xfd\xe8\xf4\xa4\x1b\x9f\xf4\x36\xfb\x92\x4a\xa5\xbe\x0e\xcc\x2a\x21\xf5\xa6\x97\x4e\xb0\xfd\x38\x66\x1a\xfa\x28\x44\x33\x20\x36\xb1\x4d\x4f\x1b\x96\x72\x86\x60\x9b\x76\xcd\xa5\x46\xc7\xec\x26\x0a\x80\xbb\x4e\x71\x7a\x97\xbb\xcd\x73\x25\x98\x47\x96\xec\x0c\x60\x4d\x1c\xd4\xd3\x06\x4f\x7b\x5a\x72\x85\x84\xc6\x27\xa8\x92\x54\xe5\xa8\x77\xa1\x28\x5f\x86\x94\xc9\x5b\x16\x31\x4e\x4c\x79\x9a\x5f\xd6\x55\x52\x3e\xe0\x8b\x02\x41\xd7\x03\xb5\x4a\xc1\x43\xfa\xa7\x66\x78\x38\x38\x6a\xd7\xb6\x8c\x7e\x8b\x38\x07\x1d\xae\x43\xf8\xb8\x31\x29\x26\x4a\xb3\xea\x65\x81\x73\xa4\x64\x13\x9f\x2c\xaa\x75\xbb\xf0\x95\x8e\xac\x8b\x28\x07\x0f\xa9\xfc\x84\x84\x41\xaa\xbf\x9a\xa8\xce\x15\x60\x6d\x65\xa7\x2a\x50\x5a\x46\xd2\x46\x36\x6b\x35\x7d\xc5\x4a\x0e\x27\x98\x81\xda\xf3\x3d\xc2\x7f\xb1\x11\x01\x4b\xcb\x18\x83\xc6\x94\x4d\x9a\x18\xc1\xab\x4a\xcb\x2a\x0e\xb3\xbf\xfd\x5a\xc1\xa7\x1d\x70\x19\x17\x4f\x44\x0d\x38\xbc\x28\x6c\x4d\x4d\xfd\x0f\x23\xe4\x60\x74\xdc\x97\x8c\xfb\x50\xb1\x42\x44\x1f\x0d\xbd\x24\xbc\x13\x0a\x76\x76\xdd\x83\xa4\x9b\x59\x92\x1c\xa4\x13\x3f\xc0\x46\xa3\x29\x1a\x5d\xa5\xf3\xcd\x68\xea\x92\xb0\x87\xaa\x06\x1d\x40\x39\xf6\xb8\xc7\x8e\x76\xf4\x23\x7a\xa1\xd7\xab\x03\x3d\xcd\x68\xc0\x0e\xa6\x94\x86\x39\x29\xa9\x71\xc6\x46\xd8\xaa\x20\x08\xea\x26\x90\xcb\x41\x1f\x7e\x8e\xba\x08\xe7\xa6\x5b\xd5\x76\x76\x35\xf7\xc4\xfd\x4d\xca\xe1\x37\xd8\x8e\x57\x8e\xbb\x2b\xed\x3a\x20\x7b\x24\xb5\x5e\x17\xa4\xae\xe2\xaf\x7d\xdd\x60\xd5\xa0\x62\x83\xab\xba\xda\xe7\x62\xdc\xac\xfa\x23\xba\x2e\x77\x05\xfa\xe8\x2e\xd1\x9d\x81\xf7\x67\xf6\xf0\x17\xee\x26\x7a\x7b\x6f\xe1\x8c\xe3\xb5\xf3\xd6\xdd\xff\x18\xb3\x77\xfd\xc1\xfc\xc8\xc9\xdc\xf1\x62\xdf\x2f\x16\x3c\x4e\xfa\x3f\xd7\xf7\xcb\xf5\xc3\x3c\x4b\x35\x03\x3c\xf4\xb1\xaa\x63\x3c\xdc\xf1\x6b\x55\x57\x8c\xff\x89\xba\xa6\xe5\x65\xab\xe3\xe2\x81\x59\xdf\xba\x9f\xef\x15\x0c\xfe\x7c\x0f\x5b\x2e\x26\xa2\x56\x2a\x76\x7b\xa9\x6a\xfd\x46\xb9\x7e\xf3\xb0\xbf\x27\x33\x1f\xb0\x76\xfd\xae\x26\x0f\x06\x73\xe9\x2f\x1b\x7d\xed\xe7\x04\xe6\xef\xb6\x7a\x9c\xe4\x0f\xad\x74\xed\x75\x7a\x0f\x50\xae\x3e\xc8\xc3\xfa\x7e\x7f\x11\xd4\x31\xf8\x3a\xc6\x5e\xe5\xa9\xa7\x39\x00\x9d\x71\xe1\x7a\xec\x16\x3f\xaf\xa9\xfc\xbe\xae\xed\xd7\x34\x81\x5f\x39\xe9\xa2\xb6\x04\xe0\x64\x9a\xfd\xe6\xd9\x98\x13\xff\x09\x00\x00\xff\xff\x1b\x0a\x2f\x8b\xc7\x30\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 12487, mode: os.FileMode(420), modTime: time.Unix(1445316695, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xe9\x6f\xe3\xb8\x15\xff\x5c\xff\x15\x0f\xc6\x6e\x21\x05\x5e\x25\x1f\x8b\x00\x29\x90\xce\x6c\xb1\xd3\x63\x3a\x48\x06\xed\x87\x20\x28\x18\x89\xb6\x89\xe8\x5a\x92\x8a\x9b\x1a\xfe\xdf\xfb\x1e\x0f\x89\xb2\x8e\x24\x6e\x66\xb0\xc1\x60\x20\x8b\x8f\xef\x3e\x7e\xa4\x6a\x96\x3e\xb2\x0d\x87\xfd\x3e\xf9\x62\x1f\x0f\x87\xc5\xe2\xfc\x1c\xbe\x6e\x85\x82\xb5\xc8\x39\xec\x98\x82\x0d\x2f\xb9\x64\x9a\x67\xf0\xf0\x0c\x7a\xcb\x41\xed\xd8\x66\xc3\x25\xe8\xaa\xca\x13\xa2\xff\x39\x13\x5a\x94\x1b\x5c\xf4\xfb\x0a\xb1\xd9\x6a\xa8\x65\xf5\xc4\x61\xdd\x68\xc3\x6a\xcb\x4b\x78\xae\x1a\x90\xfc\x27\xd9\x94\x3d\x4e\x5e\x04\xa4\x55\x51\xb0\x32\x5b\x2c\x44\x51\x57\x52\x43\xb4\x00\x58\x2a\x2d\x91\xbb\x5a\xd2\x73\xc9\xf5\xf9\x56\xeb\xda\xfc\xd8\x08\xbd\x6d\x1e\x12\xdc\x74\xbe\xa9\x7e\x72\xcc\xc2\x47\xa2\x7c\x14\xfa\x75\xc4\xaa\xe6\xe9\x2b\x29\xb5\x5c\x17\xaf\xe4\xea\x54\x38\x2f\x44\x96\xe5\x7c\xc7\x24\x7f\xdb\x3e\xc5\xd3\x46\x0a\xfd\xbc\x5c\xe0\xb6\xfd\x1e\x24\x2b\x31\x64\xc9\x47\xbe\x66\x4d\xae\x3f\x19\x37\x29\x38\x1c\x70\xa9\x46\x37\xe9\x35\x2c\x7f\xfc\x75\x09\x09\xbe\xb2\x1b\x78\x99\xb5\xcf\x76\xf3\x0f\x8f\xfc\x79\x05\x3f\x3c\xb1\xbc\xe1\x70\x79\x05\x49\x8f\x0b\xad\xe2\x13\x1c\x31\x74\xe4\x47\x5c\x63\x93\x2f\x9f\xf9\x8e\xa8\x99\x4a\x59\x2e\xfe\x8b\xda\x7d\x66\x05\x91\x5e\x7f\xf9\x04\xa9\xe4\x18\x58\x05\x0c\x4a\xbe\x83\x51\x32\x10\xa5\xd2\xac\x4c\xf9\x62\xdd\x94\xe9\x1c\xb7\x88\x62\x04\x67\xf4\x7f\xf2\xb1\x4a\x9b\x82\x97\x3a\x86\xb3\x49\xe1\x7b\xa3\x6c\x72\xc3\x53\x2e\x9e\xb8\xa4\x15\x14\x87\x26\xff\x7e\x6a\x0b\xed\x00\x20\x01\x97\xe0\x9f\x56\xe6\xdd\x16\xf3\x32\xe7\x52\x5d\x42\xc1\x1e\x79\x54\xb0\xfa\xce\x26\xe6\x3d\x85\x2a\xf9\xc5\x2e\xc7\x96\x78\x5d\xc9\x82\x69\xa4\x05\x9b\x2b\x3e\x5e\x76\x35\xb3\x3f\x3e\x54\xa5\x42\x13\x90\x6a\x89\xea\x78\x12\xff\x16\xf5\x59\xf6\xc8\xbf\xc8\x2a\x6b\xd2\x63\x72\xff\xd6\x93\x1f\x28\x4f\x24\xd7\x8d\x2c\x87\xa6\x2f\xa8\xbe\xcf\xc6\xa3\x60\xfc\xb5\x07\xb1\xc6\x7c\x28\xd7\x95\x4d\x06\xff\x0b\xa5\xa9\x54\x8a\x5a\x8b\xaa\x34\x2b\x83\xb7\x86\xdc\x66\x45\xfb\x00\x67\xe7\x0b\xfd\x5c\xf3\x69\x81\xe8\x9d\x26\xd5\x26\x4e\x26\xb4\xc1\x5f\x3f\xca\x48\x90\x56\xa5\xe6\xff\xd1\x1d\x41\x57\x52\xc9\x07\xbb\xb6\xe8\xc2\xe4\xa9\x26\xe2\xb4\x68\x63\xd4\xf2\x73\x91\xba\xe1\x1b\x81\x8f\xcf\x8b\x41\x9c\xc0\xf2\x59\x0c\x22\xd2\x2d\xec\xf7\xae\x3e\xfd\x9e\xc3\x01\xeb\x63\xd4\x7c\x47\x21\x31\x58\x24\x90\x54\x66\x64\xa3\x7d\x89\xca\xe1\x4f\x13\xe8\xbf\xf3\x4c\xb0\xaf\xe4\x46\x0c\x31\x76\x56\xdc\x4d\x4e\xb5\x75\x38\xc3\xd7\x75\x10\xaf\x8a\x34\x1b\x30\x30\xae\x84\x9d\xa2\xde\x86\x69\x45\x1d\x45\x5f\xd1\xda\xbf\x3c\x5d\xd1\x96\xaf\x57\xd4\xbf\x18\x57\xf4\xd6\x35\x42\xcc\x7b\x51\x0a\x4a\x39\xe5\x08\x4c\x92\xaa\x3f\x31\x25\xd2\xeb\x46\x6f\xa7\x2d\xa1\xd5\x9e\x15\xd4\x6f\x4c\x4a\xeb\x2d\xd3\xa0\xb1\xae\x15\x34\x8a\xcb\x92\xe8\x31\x51\x88\x87\xda\x55\x32\x33\x3f\x6c\x55\x59\xeb\x45\x99\x8a\x9a\xe5\x28\x1f\x85\x09\x1c\x75\x5c\x52\x3e\xe1\x22\xca\xc0\x7c\x15\x29\x33\x8c\x77\xd8\xe7\xe1\x81\x54\x33\x2b\x53\xbe\x30\x9a\x91\x36\x91\x4d\xa5\x95\x4b\xa9\x18\x22\xea\x6e\xe8\x1a\x27\x10\x69\x57\xc0\xa5\xac\x64\xdc\xb9\xc9\xbb\x00\x2b\xea\xaf\xfc\xf9\x1d\x7c\xc0\x70\xb6\x3f\xe2\xb8\x3e\xd5\x6a\x34\x18\xe1\x42\x45\x0c\x80\xd5\x02\x68\xa4\x90\x19\xbe\xe1\x13\x30\x10\x19\x92\x08\x8b\x03\xb0\x9f\xdc\x56\x8d\x4c\xb9\x1f\x2f\x2f\x7b\xe8\x75\x9e\x19\x4f\xa5\x7f\xd4\x84\x36\x6c\x06\x4d\xf9\xc9\xf5\x09\x50\x1c\x5b\x04\xe9\x58\xf9\x4d\xbe\xc5\x98\xd4\xb7\xda\xc3\xb6\x41\xd8\xd2\x9b\x69\x2d\x79\x9b\xa2\x2d\xc6\x9a\x95\x17\x82\xb1\x64\x8e\xd2\x9a\x96\xab\x97\x19\xbe\xc4\x63\xe0\x28\xf4\xc9\x2d\x97\x4f\xfc\x67\xf2\x26\x20\xa6\xc3\xdd\x39\x46\xcb\x40\x38\x0c\x29\xf7\xef\xa5\x9d\x2e\xd9\x8a\xfc\x20\x39\xbd\x62\xbe\x39\x7a\x37\x59\x7e\x0f\x8d\x36\xe0\x2f\xc5\xed\xe8\x52\x7a\x96\x50\xed\x5c\x81\x10\x70\x44\xba\x40\xa8\x19\xa2\x14\x6d\xd3\xb4\x6f\xb8\xaa\x31\x5a\xfc\x5f\xd8\x00\xb8\x5c\xc1\x99\x7b\xfb\x6b\xc3\x95\x6e\xa3\x6e\xc1\xeb\x2d\xd7\xc7\xa3\xb1\x8d\xa1\x57\xad\xf6\x2b\x05\xb5\x2c\xdb\xa5\x0c\xf6\x88\x86\x68\x61\x12\x5d\xc4\x23\xa2\xa2\xa2\xed\x81\x3e\x4d\xf7\x8b\xdf\x0d\x98\x26\xc7\x03\xe4\x0a\xda\x8d\x03\x33\xda\xf1\xe3\x2b\x31\xb4\x24\xf5\x8b\xef\x65\x89\x97\xf6\x46\x4b\x5a\x25\x87\x96\x1c\x47\x63\xcc\x8c\x77\x0a\xc8\x71\x34\x62\xa7\x3b\xa9\x3e\x85\x89\x8e\x63\xd1\xd7\xfa\x7b\x38\xff\xd8\xf3\x6f\xd1\xda\x6f\x72\x5a\xff\xd9\x61\x9a\x50\x5b\xdf\xec\xb1\x80\x1d\x5f\x87\x7c\x4e\xd1\xd5\x09\xb0\x3a\x86\x70\x69\x56\x59\x2f\xd0\x2a\x79\xe3\x14\xb2\xbc\xfa\xf8\xa7\x51\xba\x2a\x9c\x82\x80\x47\x0e\x91\x31\x5d\xc9\x53\x34\xed\x4b\x89\xcc\x48\xf7\xc3\xd5\xf1\x77\x26\x58\x8a\x55\x27\xce\x2f\xfc\xd3\xbf\x88\xc7\x4f\x12\xde\xae\xe4\x3a\xcb\x8c\x00\xcf\x39\xe0\xe5\xdb\x92\xe3\xc5\xfd\x0a\x0f\x83\xe3\xa6\x51\x37\x0e\xc7\x8d\x3a\xc5\x0d\x5e\x2e\x46\xcc\xb6\x6d\xb2\xe4\x89\x49\x68\xca\x20\x31\xee\xee\xe7\x20\x2c\xbe\xc5\x01\x36\x34\x7f\x1e\x7f\x5e\x5d\x41\x29\x72\xb0\x27\xaa\x9e\xb4\x2b\x04\x05\x35\x0e\x9b\x28\x7c\xbb\x32\x20\x72\x9a\xdf\x32\x36\xa7\x9b\x17\x40\xec\x9b\x54\x6d\x11\xe8\x3b\xa9\xea\xf9\xcd\xa9\x3a\x05\x63\x5f\xaf\xb5\x41\x42\xef\xa4\x31\xf1\x9a\xd3\x36\x44\x4a\x6f\x52\xd2\xa3\x8f\x77\xd2\xd3\xb1\x1b\xa8\x6a\x75\xca\x79\xd9\xe3\x12\xc3\x1f\xe1\xc2\xc9\x74\x3d\x89\xca\xd9\x20\x8b\x75\xb4\x2c\x84\x52\xd4\x06\xc3\xda\xbb\x84\x1f\xd5\xd2\xa3\x6e\x95\xfc\xa5\x12\xe5\xb1\x62\xf8\x2f\x8e\x8f\x4e\xd8\x68\x1b\xd6\x77\x0f\x2f\x61\x37\x81\x0d\x01\x0e\xe6\x0a\x2e\x84\x8b\x0c\x36\xe8\xb9\x32\x00\x93\x22\x3b\x6d\x5e\x07\xe2\xa2\x96\xdb\xa7\x8f\xed\xb0\x7e\x23\x78\x32\xde\x9a\xec\xdf\x9d\x38\x6b\xed\x75\x07\xf7\x2b\xa9\x5a\x8b\xa9\x77\xb1\xde\x52\x8b\x91\xe9\x30\x2f\xd6\x82\x66\x90\x2b\x00\x50\xe9\x96\xd3\xe4\x3a\xc1\xfc\x81\xfc\xc8\x31\x0b\x8f\xfb\xe6\xfe\xc0\x97\xdb\xad\x59\x8f\x8f\xaf\x03\xe8\xd8\xd9\x63\xe6\x1a\x3d\xe1\xf5\xa9\x4a\x95\x5c\xd1\xf0\xbf\xbc\x1a\xbd\x08\x1a\x70\x8c\xed\x55\x03\xd8\xf9\x60\xf5\xa4\xcd\xb6\xc2\xbc\xde\xee\xde\x09\xd1\x70\xba\x35\xa4\xee\xcd\x2b\x3a\x07\xfd\xa5\x78\xe0\xa2\xd2\x49\xac\xef\x96\x97\x0b\x7f\xab\x31\x72\x3c\xb6\x06\xdc\x91\x94\x7b\x2c\x43\x1f\x90\xa4\x25\x89\x6c\x48\x9a\x15\xd4\xdd\x39\x54\x94\x98\x3d\x6b\x96\xf2\xfd\xa1\x4b\x9a\xe9\x94\x99\x6c\x37\x86\x6d\x7c\x88\xbb\x6e\xd3\x57\x34\x3c\xc4\x4e\x69\xda\xd1\xb8\xc0\x1b\x01\xde\xbb\xc9\xa7\x72\x65\xf3\x1f\x4f\xb1\xdf\xc0\x00\xe4\x1a\xc3\xb1\x01\xe1\xaf\x83\xeb\x52\x8e\xb7\xb5\x22\x38\xaf\xf5\xfb\x47\xb7\xd7\x22\x05\x3f\xf0\xfa\x75\xe5\x6f\x86\xc6\x4a\xaa\x83\x9f\x27\x55\x53\x28\xb0\x83\xfd\xaa\x05\x05\xa3\x55\xd3\x8e\xf9\xae\x60\x7a\x80\xe1\xe5\x2a\xf1\x1c\x7c\x81\xfc\x7b\x05\x85\xee\x2a\x23\x50\xa4\x57\x1c\x85\x1e\x96\x46\x4f\x72\x6f\xe5\x3a\xcf\xb1\x79\x09\x63\xb5\x1c\xd6\xcb\xd1\xa5\x55\x57\x36\x2e\xf3\x86\x24\x94\x87\x6f\x44\x42\x23\x19\xf2\x9e\xf9\xe2\x51\x47\x3f\x5f\xfc\x05\xdd\x37\xc8\x97\x50\xe0\xab\xf3\xa5\xc5\x5a\x3e\x5f\xfa\xa0\xed\xe5\x74\xf1\x0c\xde\x21\x5d\x7a\x92\x7f\x33\xe9\x12\x5c\x7f\x7e\xcb\x74\x71\x50\x2a\x80\x29\xe1\xbd\x78\x9b\x2d\xed\x15\xdd\xff\x0b\x55\x3a\x79\xa3\x38\x25\x0a\xa5\xaf\xe0\xa1\xaa\x72\x0b\x46\x46\xb1\x66\x7b\xbb\xdf\xc3\x95\x9d\xb5\xd8\xf7\x19\xfa\xc0\x39\x68\xbb\x02\x1c\x00\x97\x63\x11\xf0\x8c\xee\x02\x9d\xee\x3b\xc7\x99\x9d\xe4\xb0\x13\x0c\xa6\xe1\xec\xec\xf9\xc0\x70\x20\x45\x33\xf6\xf8\x6f\x1a\x3d\x73\x66\xc8\x20\xf8\xe6\xf1\x99\xef\x6e\xaa\x46\xb3\x87\x9c\xbb\xcf\x1f\x43\x3d\x13\xf3\xfd\x6a\xc8\x71\x45\xe2\x3a\x30\x4d\xdd\xfb\x08\xea\xcf\xf9\x7e\xfe\x0b\xd8\xcc\xf9\xe1\xe8\x22\x74\x56\xcc\x5d\x00\x67\x5c\x15\x75\x17\xa3\x53\xdf\x08\x47\x3c\xe0\x7c\x37\xe2\x84\xd9\x93\x4b\xdc\x2f\xa8\xd7\xeb\xf9\xdd\x54\x1b\xb9\xdf\x0e\xeb\xdc\x60\xf6\xe0\xf3\x2b\xc5\xa8\x3d\x8b\xe8\x0a\xc1\x14\xad\x53\xa9\xd3\x87\xb8\x0a\x45\xc3\x2f\x5f\xbf\x7e\xa1\xad\x74\x49\xfb\xc0\xe9\x4b\x48\x06\x99\x90\x3c\xd5\xf9\x33\xdd\x4d\x98\x30\xff\x8d\x4e\x44\xe5\x75\x99\x19\x01\xd1\xf2\xf2\x0f\x17\x17\x17\x78\x38\x62\xb5\xb0\xe7\x84\x08\x4f\x49\xa7\x1e\x69\xb0\x56\x7a\xdd\x68\xdf\x1d\xf0\xa6\x23\x10\x53\xf9\x5c\x4c\x16\xcf\xb0\x1e\x5f\xfa\x4c\xea\x03\x43\x38\xd3\xed\x8c\xe8\x1e\xe7\x7f\x01\x00\x00\xff\xff\xe0\x7d\x02\xaf\x31\x21\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 8497, mode: os.FileMode(420), modTime: time.Unix(1445316695, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5b\x4f\xdc\x3c\x10\x7d\xcf\xaf\x18\x45\x7c\x52\xf2\x69\x1b\xde\x2b\xf1\x40\xef\xa8\x12\x20\x16\xa9\xcf\xc6\x99\x24\xd6\x26\x76\xea\x0b\xdb\x6d\xe4\xff\xde\x71\x2e\x24\x94\x45\x2c\x50\xa9\x2f\x7d\x8a\x33\x9e\xdb\x39\x67\x3c\x2d\xe3\x1b\x56\x22\x34\x4c\xc8\x28\x12\x4d\xab\xb4\x85\x24\x02\x88\x4b\x61\x2b\x77\x93\x71\xd5\x1c\x97\xea\x8d\xd9\xb2\xb2\x44\xbd\x3c\xa2\xd6\x4a\x9b\xf8\x20\xdf\xca\xda\x76\x23\x6c\x1c\x91\x77\xd7\x69\x26\xa9\x64\xf6\x01\x0b\xe6\x6a\x7b\xd6\x17\x35\xde\x77\x5d\xab\x85\xb4\x05\xc4\xff\x7d\x8f\x21\xf3\xbe\x77\x46\x99\x8f\xa7\x21\xec\x68\x83\xbb\x15\x1c\xdd\xb2\xda\x21\xbc\x3d\x81\x6c\x11\x1f\xee\xbc\x27\x57\x58\x66\x1a\x7c\xef\xa5\x4b\xa3\xe8\xf8\x18\xae\x2b\x61\xa0\x10\x35\x02\x7d\x0d\x2b\x10\xac\x02\xcc\x85\xcd\xe0\x42\x72\xb2\x5a\xc0\x1f\xc2\x58\x13\x4e\x5b\x51\xd7\x20\x95\x85\x1b\x04\x75\x8b\x7a\xab\x85\xb5\x48\xa4\x15\x4e\x72\xe0\x4a\x16\xa2\x74\x1a\x4f\x2f\xcf\x12\xd6\x0a\xf8\xbf\xeb\xb2\xcb\x81\x5c\xef\xb3\xd0\x11\x33\x9c\xd5\xe2\x27\x01\x3f\x67\x0d\x82\xf7\xe4\x9a\x42\x47\x5d\x51\x2b\x77\xf1\x60\x2b\x84\x90\xa0\x42\x8d\x74\x47\xc7\x6c\x8d\xfa\x16\x3f\x06\xba\xe1\x04\x06\xda\x17\xb6\x81\x53\x18\x49\x7d\xaf\xa4\x71\x0d\x1a\x08\x7c\x80\x28\x7a\x7e\x6a\x6c\x50\x5a\x66\x85\x92\x64\x0f\x29\xf7\x36\x34\xc6\x86\x2a\x74\xff\x30\x30\x49\x07\x0a\x6b\x83\x87\x65\x19\x65\x9f\x9a\xd2\x9f\x88\xaa\x24\xf0\x95\x68\x10\x2a\xbb\x42\x96\xa3\x5e\x81\x65\xba\x44\x0b\xa4\x18\xea\x82\x71\xec\x7c\x3a\xc0\xec\xd9\x01\xd0\x68\x9d\x96\x13\xf2\x73\x65\xef\x3a\xc3\x3c\x89\x89\xe8\x50\x99\x74\xe7\x53\xe5\x8a\x99\x5e\xaa\x1d\x06\xb9\x50\x82\x98\x03\xe2\x00\xc2\xa7\xcb\xc1\x9a\x4f\x13\x8b\x97\x5a\xe5\x8e\xbf\x8c\xc5\x31\xf6\x95\x2c\x2e\xb2\x4c\x2c\x4e\xa6\x99\xc5\x6d\x60\xf1\x1b\x0d\x62\x60\x31\x67\x96\xbd\x9e\xc3\x76\xaa\xfb\x62\x0e\x47\x0a\xd7\xc8\x1d\x75\xb6\xa3\x57\x2e\xa4\x08\xd8\xcd\xe8\xd0\xd3\x69\xde\x31\x23\xf8\xa9\xb3\x55\x6f\x7d\x94\x87\xe0\x41\x1c\xf4\x70\x9d\xa1\xbe\x8c\xa5\xa7\x5d\xae\x82\xab\x19\x7f\x52\x48\xfa\xe7\x46\x67\x2e\x5a\x56\x7b\xbf\x1a\x80\xa6\xf7\xc1\x4b\x51\xaf\x1e\x63\xe0\x26\xb4\x03\x2c\x54\x7b\x1a\xf9\x8c\x78\x42\x43\x6f\xf9\x2b\xee\x9e\x07\xc7\xaa\x0d\x25\xff\x73\x10\xc2\xd6\xa0\x05\x38\x80\x98\x15\x2d\xb4\x6a\xc2\xef\x5a\x39\xcd\x83\xe1\x39\xf8\xf6\x6b\x7b\xd1\xa2\x66\xa3\xa4\x03\x03\x77\xab\xee\x51\xe4\x5f\x98\xcc\xeb\xf1\x55\x3c\xb5\x19\x47\xdf\x79\xd0\xa7\x22\x9a\x35\x54\xb2\xed\xbf\x07\xe4\x19\x02\x96\x52\x51\x62\xc8\x82\x08\x4a\x93\x63\x3e\xe7\x5c\xdd\x57\x74\x76\xa1\x72\x93\x28\xf0\x9b\x44\x63\x04\x69\x37\xe7\x5e\x3b\x4e\x7b\xc3\x5c\xa1\x69\x89\x1e\x7c\x60\xc8\xd6\xbc\xc2\x86\x51\x73\x21\xd9\xfe\xcb\xec\xb3\xba\xde\xb5\xb8\x68\x6a\xdf\x28\xbc\xa4\x66\x3f\x3e\xcb\x9c\x0f\xa7\x48\x4d\xda\x2e\x46\xe8\x80\x5d\x70\xc8\x4e\x5b\x8e\xc0\x2b\x54\xff\xbb\x42\xc3\x3f\xa5\xf7\x2c\x07\x1f\xfd\x0a\x00\x00\xff\xff\xba\xb3\x61\xa2\x4a\x0a\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1442081714, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xdb\x3e\x0c\x3d\xc7\x9f\x82\x15\x5a\xc0\xc6\x2f\x56\x7e\xe7\x0c\x39\x14\x18\xb6\x75\x58\xff\xa0\xe9\x71\x17\xd5\xa1\x1d\xad\x8a\xe4\x49\x72\xb2\x2c\xf0\x77\x1f\xa9\xc4\xa9\xd7\xed\xb0\x4b\x6c\x93\x4f\x8f\xe4\x7b\x54\x5a\x55\xbd\xa8\x06\x61\xa3\xb4\xcd\x32\xbd\x69\x9d\x8f\x90\x67\x00\xc2\xb8\x46\xf0\xd3\x85\xf4\xb0\x18\x67\xeb\x18\x5b\x91\xf1\x57\xa3\xe3\xba\x7b\x96\x95\xdb\xcc\x1a\x57\x86\x9d\x6a\x1a\xf4\xe3\xd7\xd0\x62\x95\xa0\x87\x83\x57\x96\x0a\xc8\xf7\x58\xab\xce\xc4\x9b\x54\x22\xf4\xfd\xe1\xd0\x7a\x6d\x63\x0d\xe2\xea\xbb\x00\xd9\xf7\x09\x8c\x76\x75\x7a\x3b\x1e\xbb\x7c\xc1\xfd\x14\x2e\xb7\xca\x74\x08\xf3\x05\xc8\xd1\x79\xce\xf5\x3d\x41\x61\xcc\x74\xc4\xfe\x46\x57\x64\xd9\x6c\x06\x4f\x6b\x1d\xa0\xd6\x06\x61\xa7\x02\x34\x68\xd1\xab\x88\x2b\x78\xde\x43\x5c\x23\x9c\x3a\x87\xe8\x9c\x91\x8c\xbf\x55\x2f\x14\xed\x3c\x82\x75\x91\xc2\xe0\xb6\xe8\x77\x5e\x47\x24\xfc\x40\xa5\xea\x48\x67\xf6\xae\x1b\x11\xea\x08\xcf\x58\xa9\x2e\x50\xda\x18\x4e\x7a\xc0\x95\x8e\x01\x76\xae\x33\x54\x10\xc1\xb8\x10\x2f\xb8\xc8\x4d\x3c\x05\x9d\x35\x7b\xce\x0c\x45\x22\x5a\xd0\x75\x62\xc6\x1f\xad\xd1\x95\x8e\x04\x60\x59\x75\xbd\x87\xb2\xd4\xb6\x32\xdd\x0a\x4b\x36\x0e\x6a\xe7\xd3\x0c\x43\x0f\xa9\x2e\xc5\x42\xd7\x26\x43\xc9\xa7\x8d\xb2\xab\x40\x15\x1b\x37\x3f\xa3\x86\x91\x5f\x03\xe8\xa9\x3c\x94\x11\xa4\x9c\x49\x09\xe5\x75\x52\x57\x85\x4a\x19\xfd\x93\x4c\xbc\x53\x1b\x04\xd6\x9e\x5a\x93\x0f\xa4\x7a\xa5\x5b\x65\xc8\x84\xb2\x6c\x87\x2f\x3a\x32\x4e\x0d\x26\x64\x5b\xe5\x87\x8a\x9f\x97\xf7\x77\xb0\x80\x6f\xc1\x59\xf9\xa8\x76\xb7\x18\x02\x2d\x61\x4e\x07\x97\xaf\x80\xbe\x27\xdf\xea\xce\x56\x69\x39\xf3\x02\x0e\x64\xe9\x89\x60\x49\x3a\x4c\x01\xbd\xe7\x9d\x60\x51\xe4\x1d\xee\xf2\x11\xfb\x14\x84\x28\x08\x4f\x7d\x32\xea\x62\x01\x56\x9b\xc4\x00\x24\x7e\x23\x3f\xa8\x48\x1a\xd9\x9c\x92\x0c\xeb\x79\x55\x93\x54\xc4\xe7\x82\xfc\x88\xa4\xff\x36\x17\x0f\xf7\x8f\x4f\x03\x4f\x4a\x2f\x16\x44\x7c\xe2\x39\x06\x40\xfc\x2f\x06\x86\x35\xd9\xfa\x86\xe1\xd3\xfd\xf2\xcc\x90\xd2\x63\x86\x63\x80\xef\x1a\x09\xcc\x1f\x67\x26\xd5\x6a\x26\x62\x29\x8f\x37\xb4\xef\x79\xc4\xbf\xba\x71\xfd\x70\x93\x8f\x74\xe1\x62\x95\xb3\xb5\x6e\x68\x77\x39\x47\x5c\x05\x73\x1a\x1d\x22\x3b\x7d\x16\x8e\xee\xb4\xfc\x92\x82\xb9\x88\x55\x2b\xa6\xc7\x86\xfe\x03\x31\x17\xf4\xcb\xf3\x15\xd9\xe4\xad\x84\x93\xc9\x1f\x02\x4e\xa8\xe7\x49\xbd\x89\xc9\xf7\x58\xe7\x82\x17\x49\xdb\x86\xb7\x67\xdd\xd1\xea\x8d\xdb\x05\x15\x81\xff\x49\xe6\xb3\xd9\x55\xf8\x6a\xa9\xea\xd0\x98\xbc\x5e\xad\x7c\x5e\xa4\x66\x4f\x55\xa9\x4b\xc6\xca\x25\x6f\x66\xfe\x3a\x01\xcd\x74\x8a\x15\xc5\xbb\x7f\xb4\xb8\xcf\x7e\x05\x00\x00\xff\xff\x54\x08\xd5\xa9\xee\x04\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 1262, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x8d\xed\xc2\x32\x54\xe5\x9e\x22\x87\x6d\xb7\x6d\x72\x59\x04\x49\xd0\x1e\x0b\xae\x34\xb2\x88\x95\x48\x85\xa2\xec\x75\x0d\xfd\xf7\x0e\x3f\xf4\x65\xcb\x76\x11\xec\x06\x39\x14\xf0\x81\x32\x87\x8f\x33\x6f\x66\xde\xb0\x62\xc9\x17\xb6\x46\xd8\xef\x21\xbe\xf7\xeb\xb6\x0d\x82\xab\x2b\x78\xca\x79\x0d\x19\x2f\x10\xb6\xac\x86\x35\x0a\x54\x4c\x63\x0a\x9f\x77\xa0\x73\x84\x7a\xcb\xd6\x6b\x54\xa0\xa5\x2c\x62\x63\xff\x5b\xca\x35\x17\x6b\xda\xec\xce\x95\x7c\x9d\x6b\xa8\x94\xdc\x20\x64\x8d\xb6\x50\x39\x0a\xd8\xc9\x06\x14\xfe\xa4\x1a\x61\x91\x3a\x68\x48\x64\x59\x32\x91\x06\x01\x2f\x2b\xa9\x34\x2c\x03\x80\x85\x40\x7d\x95\x6b\x5d\x2d\x02\xfa\x22\x37\x15\x13\xe4\x63\xfc\x11\x33\xd6\x14\xfa\xce\x5a\xd6\xe4\x33\x6d\x55\x8a\x0b\x9d\xc1\xe2\xc7\xe7\x05\xc4\x26\x0c\x7b\x00\x45\xda\xaf\xdd\xe1\x77\x5f\x70\x17\xc1\xbb\x0d\x2b\x1a\x84\xeb\x1b\x88\x27\x28\x66\x97\x56\x70\x00\xe8\xcd\x0f\x50\x43\x4b\x95\x31\x65\x75\xc2\x0a\xfe\x0f\xb9\xf6\x89\x95\xc6\xee\x96\x42\x29\x50\xfd\xde\x88\x04\x74\xa3\x44\x0d\x8c\x58\x10\x89\xe6\x52\xc0\x96\xeb\xdc\x06\xaf\x2c\x47\x35\x5f\x0b\x46\x46\x08\x74\xa1\x24\x43\x42\xcc\x1b\x22\x63\x0c\x08\xb9\x43\x0c\xf4\xae\xc2\xcb\x77\x9a\xbb\x96\x64\xc5\x33\x93\x5a\xc5\xca\x8e\xa5\xa3\x53\x6e\xb7\x0f\xca\x9d\x21\x24\x88\x3f\x34\x3a\x97\x8a\x6c\xd3\x11\x46\x04\x07\xa6\x63\xb3\xb6\x5d\xd9\x5a\x22\xe6\x12\x5e\xb1\xc2\x19\x39\xeb\x10\x3a\x7f\x1e\x9b\x24\xc1\xba\x7e\xc0\xba\x92\xa2\xc6\x01\xe9\x60\x23\x7e\x4c\x72\x2c\x59\x87\x3a\xbf\x1b\xff\x21\x9f\x0c\x23\x87\x9e\xb9\x05\x2a\x25\x15\xa5\xc9\xd0\x01\xcb\x4c\x5c\x24\x2e\x04\xf7\x41\xbe\x0e\xd4\xb5\x6d\xe5\xc2\x7f\x05\x02\xab\x9e\xbb\x37\x49\x25\xec\xa9\x03\x14\x9a\x92\x86\x4c\x1c\x55\x58\xf5\x7d\xb8\x18\x22\x0f\xda\x8b\x3d\x67\xba\x08\x55\xc6\x12\xd2\x1d\x49\x12\x95\x33\x0d\x09\x13\xbe\x81\x80\x3a\x99\xa7\xf3\x2d\xe6\xbc\xbf\xdc\x61\xa3\x1b\x0c\x1d\x7d\xc5\xfc\xdf\x6d\xb6\xdb\x5c\x8a\x3e\xe1\x76\x96\x01\x48\x14\x92\xde\x1b\x41\x14\xb8\x05\xa3\xee\x71\xc7\xab\xcb\x17\xce\x67\x47\x56\x66\x50\x90\x7e\xba\x6e\x3e\x85\xbf\x4c\xf4\x57\x58\x95\x3c\x25\xc4\x2d\x53\x18\xff\x2a\x29\x5b\x5f\x75\xd4\x29\xe8\xd9\xd4\x86\xb6\xed\x66\xbc\x1e\xd5\xfd\xfb\x59\x8b\xbd\xbf\xe7\x1a\xc8\x81\xc8\x17\x85\xba\xee\x6e\x6d\x2d\x2d\xab\xa0\x27\x9f\xa6\x9d\xda\x39\xf6\xa6\x5f\x66\xfb\x23\xd6\x89\xe2\x95\x9d\x16\x66\x22\x1b\xa3\xe9\x7f\x13\xf6\x0b\xca\xeb\xc1\x31\x07\x7c\x7c\xa6\xe8\x4a\x60\x2e\xc6\x39\xda\x3f\xdc\xdf\x0d\x13\x6f\x75\x75\xa6\x3b\xa0\xd6\xaa\x49\xb4\xa5\xca\x93\x31\x97\x08\x37\x42\x27\xad\xe2\x17\xe7\xf4\x75\x3c\x78\x6f\xff\x43\x22\x0d\xdd\x4e\xf5\x0d\x0f\x0f\x98\x20\xdf\xa0\xea\x3c\x9d\x4f\x72\x08\x8f\xa8\x36\x78\xfb\xf4\x74\xbf\x54\xbe\x34\xbb\x06\xf8\x4b\x71\xea\xf9\x08\x14\xac\xfc\xff\xcf\x0d\xd6\xda\x0b\xa2\x6c\x34\x46\xf0\xb7\x79\x4f\xcc\x5c\xd7\x45\x1e\x3f\x18\xbb\x3b\x91\xc9\xa5\x19\x4a\x3d\x0f\x93\x9e\x6e\xac\xea\x45\x40\xcd\x74\x09\xae\x3f\xb7\x34\x8e\x19\xec\x90\x40\x09\xd1\x9c\xfd\xe1\x06\x04\x2f\xac\x7b\x70\xde\x29\x1b\x61\x4a\x11\x13\x88\xc7\x21\x51\x91\x69\x43\x02\x10\x75\xb1\x11\x64\x68\xa1\x5c\x13\xd0\xd2\xbc\x85\x36\x4c\xc1\x30\xb1\x5c\x38\x42\xd2\xe3\x0d\x9f\xc7\xc2\xb4\xe8\x05\x73\xdf\x2e\x42\x2f\x31\x7d\xf9\x4e\x14\xcc\x05\xe0\x48\x98\xc6\x30\xdc\x73\xe3\x6f\x3a\x73\x49\x4f\xe4\x50\xf3\xee\x3b\x5e\x1e\x89\x66\x08\x24\x57\xf6\xe1\x4a\x3f\x12\xa7\xa2\xd8\xb9\x47\xd8\xbc\xb4\x46\x70\x67\x9e\xb5\x25\xaf\xd1\xb2\x70\xf0\xd0\xf4\xf4\x5f\x48\xdd\x2f\x5c\xa4\x7f\x9a\x49\xe4\xeb\xa8\xcf\x60\x74\xd4\x1c\xef\xe7\x70\x86\x39\xe2\x82\x23\x9a\x06\xed\xff\x79\x52\x00\x26\xba\xcf\x74\x5d\x37\xde\xbe\x5f\x3d\x9c\xa8\xe8\xfe\x6f\x3b\xe7\x0e\xe7\xd1\xe9\x39\xa4\xcc\x75\xe3\xe1\xf2\x32\x98\xeb\x1e\x62\x3e\x25\x5e\x30\xe2\xd3\x63\xfc\x04\xfb\x23\xe7\xfa\xda\xb4\xb5\xc4\x12\xdd\xd8\x2a\xf2\x4f\x0e\xfb\xd4\x77\x79\x7e\xd5\xfe\x0c\xbe\x05\xf0\x4b\x53\x77\xa2\x36\xad\x4f\x66\xe3\x5b\xd6\xc5\x89\x66\x7b\x71\x66\x47\xcf\xa8\x37\x94\xce\xb7\x9a\xcd\x4e\xfb\xda\xe0\xdf\x00\x00\x00\xff\xff\xa2\xb7\xa2\x6b\x51\x10\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 4177, mode: os.FileMode(420), modTime: time.Unix(1441945131, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x19\x4d\x6f\xdb\x36\xf4\xee\x5f\xc1\x19\x6d\x21\xb9\xae\x92\x43\xb1\x43\xba\x0c\x58\xd3\xac\x0d\xd0\x15\x59\xd2\xe6\xd2\x16\x03\x23\xd1\x36\x11\x7d\x38\x24\x95\xc4\x0d\xf2\xdf\xf7\x1e\x49\x49\x94\x44\xd9\x4e\x93\x60\xeb\xa1\x11\xc9\xc7\xf7\xfd\xc5\xe7\xdb\x5b\x92\xb0\x19\xcf\x19\x19\xcb\x94\xc7\x6c\x49\x05\xcd\xae\x68\xca\x13\xaa\x0a\x31\xbe\xbb\x1b\x01\x04\x9f\x91\xe8\x13\x63\x89\x3c\xe5\x3f\x18\x31\x7b\x31\xcd\x58\x8a\xcb\xe8\x13\x7c\xc1\xa6\x3e\xdb\xdb\x27\x3c\x57\xbf\xbe\x0e\x52\x96\x07\x00\x15\x9d\xd1\xb4\x64\x87\x37\x4b\xc1\xa4\xe4\x45\x0e\x70\x61\x88\xd7\x59\x9e\x90\x06\xf9\x5f\x3c\x3f\x52\x2c\x93\xb8\x05\x6b\x26\x04\x62\xb2\x6c\xb0\xfa\x58\x63\x3c\xa6\x6a\x01\x70\x53\x32\xc6\xd5\xc7\x22\xa6\xca\x20\x1e\x4f\xc9\x10\x5f\xfa\xc4\xa5\x12\xbe\xd1\x44\x7e\xd9\x27\x39\x4f\xc9\xed\x88\x10\xc1\x54\x29\x72\xdc\x1d\xdd\x79\x18\xa4\x37\x6b\x19\xb4\xc7\x0f\x62\xb0\xc6\x72\x7f\xf6\xbe\xe4\xfc\xb2\x64\xeb\x38\x74\x20\xb6\x61\xd2\x67\xb7\x7b\xf2\x74\x98\x97\xd9\x00\x33\x78\xf4\x93\x5c\x98\x7d\x8b\xfb\x3e\x2c\x99\x2f\xc7\xdd\x97\xa2\x58\x32\xa1\x56\x1d\x8f\x77\x24\x38\x92\xc7\x82\x67\x5c\xf1\x2b\x66\xae\x82\xf6\x96\x29\x08\x80\x97\xed\x81\x73\x31\x32\x40\x6d\x2d\x1c\xc9\x83\x52\xaa\x22\xfb\xb3\x10\x19\x55\x8a\x89\x2e\xa6\x58\x1f\xcf\xf4\x71\x97\x95\x01\x8c\x7f\x08\x41\x57\x5d\x3c\xbe\xe8\xed\x23\xa8\xb4\x50\x29\xe1\x9c\xe7\x49\x2d\x8b\xbe\x3d\x1e\x80\x6c\xf0\xe3\x1d\xd6\x52\xd4\x31\x15\x2c\x57\x86\x56\x74\x04\xa7\x37\x67\x14\x05\x8d\xd1\xea\xf2\x9a\xce\xa3\xd3\x65\xca\xd5\xdb\x95\xd1\x82\x35\x3d\xde\x69\x41\x7f\xf5\xef\x7f\xb7\xee\x71\x50\xa4\x29\x8b\xd1\x41\x0c\x1a\x74\x13\x93\x4b\x52\xc9\x06\x88\x0b\x7a\xdd\x92\xdf\x05\x90\x3f\x34\x7b\x10\x7d\xa3\x2b\xd8\xe8\x9c\x9a\x8d\xf7\xc5\xe7\xd5\x92\x79\x2e\x9f\x59\x5f\x3e\x4c\x59\x86\xb2\x03\xa6\x59\x99\xc7\x41\x07\x0c\xb3\x61\x27\xea\x0f\x16\x3c\x4d\xaa\xd8\xd7\x44\xcc\x4e\x4d\x2a\x24\x13\xf0\xdf\x42\xc8\xc8\x12\x41\xcf\x47\xe7\xee\x78\xa0\xdf\x7d\x0d\x36\xe4\xb8\x8e\x06\x08\x0e\x88\x86\x11\xf8\x58\x57\x48\x64\x7b\xf7\x4d\x6f\xf7\xb7\xee\x8e\xfc\xd1\x03\x7a\xf9\xb2\xe2\x09\x3c\x00\x30\x5b\x29\xfa\xfe\x5e\x1f\x74\x82\x09\x1d\xc7\x1c\x1d\x14\xf9\x15\x88\xa2\x63\xe3\x0a\x23\x7e\x5a\x65\x8c\x46\x3b\x2e\x4c\x57\xc9\xc6\x71\x5c\x8f\x09\x81\x33\x9b\x77\x9c\xe4\xe0\xa6\x07\x54\xef\x51\xae\xf5\x86\x6a\x0f\x1a\x4a\xeb\x72\xd2\xd8\x63\x2e\x9b\xaa\x36\xf2\x03\x16\xa8\x99\xb2\xa2\x0d\xfb\x53\x57\xc4\xa9\xa3\x8a\x6d\x52\x73\x2b\x13\x22\x6d\xd2\xf7\xef\x7d\x42\x97\x4b\x08\x8d\x2e\x2d\x31\x25\xda\x0a\xa1\xbe\x84\xc1\xa5\x9d\xe9\xa1\xcc\xaf\x57\x90\x47\x82\x8e\x0c\xf7\x97\x62\x33\x55\xb7\x2e\xe8\x2c\xd2\x38\x65\x93\x66\xbb\x91\xd7\xcf\x84\x6e\xcc\x3d\x8e\x8d\x5d\x41\x9e\x4c\x37\x1e\x52\x4d\xb2\x74\x8a\xc0\x92\xc6\x17\x74\xce\x88\x49\xcf\xe6\x1b\x20\x46\x3b\x3b\xe4\xf3\x82\x4b\x32\xe3\x29\x23\xd7\x54\x92\x39\xcb\x99\x00\x01\x13\x72\xbe\x22\x6a\xc1\x74\xee\x9f\x43\xcc\xaa\xa2\x48\x23\x84\x3f\x4c\x20\x03\xe4\x73\x38\xac\xee\x65\x7c\xbe\x50\x04\xb2\x19\xe4\x85\x59\xa9\x34\xaa\x05\xcb\xc9\xaa\x28\x41\xc6\x57\xa2\xcc\x5b\x98\x2a\x12\x24\x2e\xb2\x8c\xe6\xc9\x68\xc4\xb3\x65\x21\x14\x09\x40\x01\xe3\x9c\xa9\x9d\x85\x52\xcb\x31\x2e\xe6\x5c\x2d\xca\xf3\x08\x00\x77\xe6\xc5\x2b\x8b\xc0\xfd\x34\x69\x60\x3b\x58\xc4\x7a\xc1\xd5\x4e\xd5\xc3\xdc\xeb\xd6\x76\xc0\xf8\x77\x3c\x32\x76\x14\x34\x07\x25\x47\xef\xd8\x8c\x96\xa9\x3a\xd2\x22\x4a\xe3\xa7\x50\xae\x73\x35\x23\xe3\xe7\x97\xe0\x78\x95\x77\x5a\xa3\x39\x77\x9f\x5d\xb0\xd5\x94\x3c\xd3\x91\x8c\xbe\x18\xb5\x90\xe0\xa9\x2d\x3f\x2e\x3e\x0b\xde\xc1\x1a\x6a\x53\x23\x28\x95\x31\x6d\xf5\xae\xc7\x18\x06\x12\x8c\x91\x2b\xca\x73\x49\x68\x9a\x6a\x73\x9d\x17\x25\xdc\x5d\x9a\x53\x2c\x3c\xb8\x09\x18\x16\x25\x18\xcd\x45\x40\xb0\x8a\xe9\x0c\x8b\x34\xa0\x9c\x71\xa0\x90\x6a\xef\x81\x70\x84\x5e\x80\x14\xe7\x88\x1a\x7c\x6a\x26\x8a\x8c\x50\x82\x3a\x8d\x4e\x18\x74\xb3\x52\x8d\x14\xe6\xe0\x75\x9c\x49\x25\xca\x58\x55\xa5\xca\xaa\xd5\x9e\xd5\x65\xe8\x1d\x93\xb1\xe0\x4b\x9b\xe7\x8d\xac\x9d\xcd\x8e\x8e\xfb\xf4\xb0\x81\x37\x35\xc1\xd1\x9e\x8e\x23\x14\xec\x2d\x64\x0a\xcb\x33\xe8\x06\x0a\x0c\xa6\x0e\x50\x17\xa0\xac\x3c\x0a\x56\xe0\xf0\x1a\x64\x4a\xb8\x22\x54\xca\x32\x83\x5d\xb5\x80\x56\x07\xbc\x66\x99\xb2\x1b\x8c\x9b\x7c\x2e\x09\xc7\x95\xee\x3b\x28\xb1\x59\x85\x9e\xa7\x2c\x00\x69\x67\x99\x02\xed\xcc\x39\x7c\xae\x42\x53\xe9\xb0\x09\x61\x62\x46\x63\x86\xac\xa0\x35\xa4\x46\x60\xd2\xbc\x44\x62\xd7\x1c\x0c\x57\x82\xc6\xe1\x1a\xd5\x11\x99\x31\xb5\x28\x12\x82\xd6\x90\x23\x6c\x6d\x88\xce\x22\x27\x2c\x66\x50\xc2\x45\x25\xf5\x64\x8d\xf2\x43\x57\xec\x40\x90\x89\x6b\xba\x29\x11\x45\x09\x71\x3c\xc9\x78\x92\xa4\xec\x1a\x4c\x0d\x0f\x20\x15\x2f\x58\x72\x82\x07\x15\xef\x68\x39\x6c\xcf\xa0\xda\x91\xaf\xdf\xf5\x5e\xdd\x76\x44\x1f\xa8\xfc\xbb\x64\x62\x55\x1b\xf4\x52\xea\xae\x2f\xfa\x72\xf2\x31\xd2\x27\x41\x68\x8d\x51\x65\x77\xb8\x82\xbd\x49\x7d\xa3\xe5\xe9\x7e\x2f\xa9\xe9\xe5\x85\xea\xf4\xdf\xa6\x21\x6f\x78\x80\xdd\x76\xfa\xef\xe8\x2b\x42\xbb\x7b\x55\x16\x5c\xca\xe8\x3d\x53\xee\xb3\x28\xb4\x3a\x8a\x4c\x33\x25\xfd\x65\x5e\x36\x69\x1e\x16\xba\x75\x0a\x9b\x92\x5f\xcb\x0d\xfd\x17\x60\x7d\x28\x93\x86\x1f\xa3\x99\x27\x66\xf7\x03\xa3\x50\x5c\x1f\xcc\x70\x64\xf0\x3c\x31\xb3\xb5\x4b\x69\xb7\xb0\x7b\x50\xcb\x9a\xbd\xfe\xbb\xdf\x3f\x0d\x30\xec\xd6\x1d\xb0\xd0\x0c\x22\xaa\x16\xf7\x83\xfd\xad\x87\x63\x6c\x75\x3f\xb1\xeb\xe0\xf5\xee\x2e\x74\xb0\x02\xf0\x63\x05\xd6\xc5\xf7\xdb\xd8\xc7\xc2\xb7\x31\x99\x51\x38\x4e\xf6\xc8\xf3\xab\xb1\x91\x5a\x8b\x6d\x24\x36\xa4\x7c\x66\xf0\x27\xc6\x7d\x62\xcb\x60\x84\x62\xdc\xbe\x83\x5c\xb5\xe7\x15\x7d\x4a\x8c\xf0\xfe\x53\x73\x76\xd7\x51\xff\x43\x3c\x03\x35\xab\x9b\xe9\x47\x77\x8c\xba\xa7\x74\x4a\x86\xe3\x2d\x4f\x93\x40\x3c\x0f\x6d\x6f\x4e\x19\x7e\x4c\x3f\x62\x4c\x60\x65\xeb\xc4\xc5\x23\xca\x35\x6c\xbb\xa7\x15\xae\x63\xd7\xa6\x10\x1d\xc9\xb7\x45\x52\x5b\xb0\xf5\xd0\x33\x54\xe1\xfd\x8a\xe5\x5c\x54\x1f\x20\x02\xde\x98\x92\x17\x5b\x07\xd2\xd6\x1c\xdb\x80\x07\x6e\x24\x3b\xc4\x65\xe0\x0d\xf3\xb1\xff\x89\xbb\x26\xe0\xdb\xde\x8b\x8d\xc4\x3f\xbd\x57\x96\xaf\x49\xd0\x83\x98\xdc\xbe\x20\xb6\x4b\x1a\xd5\x33\x67\xf0\x31\xe5\x43\x55\x3d\xb0\x82\x8d\x96\x5e\x6b\x6d\xf3\xef\x1c\x32\xe5\x85\x5d\xdd\x8d\x9a\xff\xb7\xcd\x3c\x5e\xb9\xee\xc5\xe2\x1a\x06\x1b\x56\xaa\x0c\x53\x79\x63\x2b\xe5\x54\xdf\xc0\x29\x0e\xe4\x01\x47\x48\x7e\x27\xbb\xde\x69\xc8\x01\xb4\x98\x85\xe4\x8a\x35\x53\x27\xe3\x3c\x70\x2b\x8a\xa2\x2a\x0c\xda\x33\x25\x7c\x4a\xc4\x29\xb4\xaa\x5a\x3e\xd0\x44\xd0\x91\x39\xb4\xb3\xb3\x5e\x4f\xd5\xea\xa8\x5a\xc1\xd3\x8c\x94\xdc\x99\x91\x77\x92\xba\xa1\x31\x75\x58\x6b\x7a\xd2\x35\x15\x81\x5e\x63\xff\x0b\xd5\x71\x4a\xcc\x40\x56\xbf\x1f\x7c\x1d\x75\x33\xfa\xc2\x44\x17\x58\x31\xea\x0e\x2b\x24\xba\xcd\xe5\x82\x25\x2d\x3f\xa9\x27\xe0\xd5\xe9\xa9\x26\xb7\x71\x16\x0e\x9c\x6d\x3b\xe3\x71\xed\xaf\xa7\x19\xeb\x86\x6b\x5d\x00\x93\x3c\xdb\x93\x36\x83\x10\x39\xf8\xa9\xa1\xda\xc6\x71\x9a\x3b\x48\xb3\x54\xaa\x61\x46\x7f\xd2\x45\xf6\xcd\xa3\xa5\x57\x52\xfb\xbe\xd1\x16\xd6\xda\x33\xd2\x49\x31\xe8\x3e\xa3\x4f\xcd\x13\xbc\xae\x16\x35\x27\xff\x03\x79\x27\x81\x96\x24\x0a\x26\xad\xdb\xa1\x3b\x9e\x1b\xbc\x0c\x04\x7a\x6e\x61\x5f\x41\x4d\x98\xcb\x8d\xb9\xac\xf2\x5b\x7f\xdc\xcc\xd6\x55\xd4\x35\x1e\xda\x4a\x25\x46\x14\xb7\xc4\x3c\x45\x78\x7f\xfd\x7e\x8f\x00\x97\xf6\x17\x4d\x9d\x3a\xd1\x52\xb5\xfa\xda\xc1\xad\xe1\xf6\xf7\x07\xf2\x6a\x05\xbb\xc1\x3b\x7a\x6d\x86\xd3\x5d\xd8\x31\x10\x6c\x26\x6c\x76\x56\x4d\x74\x06\x7e\x58\x69\x80\xd7\xfe\x6e\xa2\x7d\xbb\xe1\xfc\xc5\x0b\x2d\x66\x85\xdf\x2d\x13\x83\xce\x55\x01\x77\xdb\xf1\x01\x7d\x80\x9d\xdb\x05\x6b\xf3\x5c\xb5\xce\x64\x7e\x06\x3a\x2d\x41\x7b\x30\x70\x8a\xe8\xfe\x6b\x27\xef\x7b\x79\xfb\xd7\x3c\xac\x72\x9d\x58\x1c\xe0\xfd\x67\x62\x61\x2b\x89\x36\x94\xb8\x2d\x7e\x71\xf2\x46\x73\xef\x47\x47\xe7\xcb\x69\x08\x0e\x6f\x94\xa0\xa7\xf1\x82\x65\x54\x4b\xb9\x33\x19\xb5\x88\x26\x45\x6c\x22\xd6\xd2\xb1\xc3\xd2\xbd\xac\x48\x58\xaa\xcd\x68\xc5\x19\x4d\x76\xda\x37\xa5\x46\x6a\xaf\x35\xb4\xff\x0d\x00\x00\xff\xff\x51\xa7\xc6\x2b\xf1\x20\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 8433, mode: os.FileMode(420), modTime: time.Unix(1442077732, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x90\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\xca\xe5\x09\x92\x9e\x9a\x12\x28\x00\x21\xca\x58\xf6\x06\x16\xd9\x5e\x63\x6f\x24\xc2\x29\xff\xce\x26\x07\xe1\xf2\x07\xd7\x59\x33\x6f\x66\xe5\x39\x1e\xc1\xe3\x40\x09\xc1\x54\x29\xa3\x93\x81\x30\x78\x03\xf3\xdc\x1d\x40\x4d\xc1\x98\x83\x15\xb5\x3d\x3b\x25\x28\xbd\x19\x68\xd5\xde\x79\xb9\x70\xc6\x22\xd3\x8b\x0d\xe4\xad\x10\xa7\x5b\x76\x4f\x7f\xf4\x3c\xc3\xa1\x6b\x34\x90\x6d\x75\x4a\x7c\x23\xb4\x0f\x36\xa2\xea\xbb\x96\xea\xde\x31\xda\xe7\x29\xe3\xe9\x04\xf4\x1f\x95\xd3\x8d\x51\x68\xe5\xd7\xab\x34\x40\x62\x81\xf6\x11\x3f\x47\x2a\xe8\x55\xbc\xe2\x48\x4b\x8b\x4c\x4a\x62\x5a\xa4\x25\xa3\x64\xfb\x7a\x7f\xf7\x9b\x84\xaf\x18\x4e\x55\xff\x9a\xd9\xf8\xbe\xd9\x9e\xcd\xd9\x24\x32\xe6\x80\xdb\x22\xcd\xe5\x4c\x72\x6d\x7a\xe8\x3a\x70\x63\x15\x8e\x50\xb1\xd0\x5a\x52\xce\xbe\xf1\x13\x00\x00\xff\xff\x79\x1e\x8a\x65\xda\x01\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 474, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\xcc\x2f\x8a\x22\xfb\x57\xcb\x11\x3d\xa6\xa2\x52\x0f\x3d\x50\x09\x5a\x25\x6d\x2f\x08\x55\x03\x1e\x87\x8d\x96\xb5\xb5\xbb\xa6\x50\xcb\xdf\xbd\xb3\xbb\x06\x4c\x30\x6d\x73\x88\xf0\xfc\x7b\x6f\xde\xcc\x4e\xd3\x40\x4e\x85\x50\x04\x37\xb6\xae\x24\x3d\x91\x16\x28\xc5\x2f\xd2\x37\xd0\xb6\xd1\xfd\x3d\x7c\x53\x1b\xd4\x66\x8d\xf2\xd3\xd3\xe7\x19\xd4\x87\x2f\x03\x76\x2d\xf8\x9f\x4b\x02\xbb\xaf\x08\x0a\x5d\x6e\x00\xc1\x87\xa1\xd6\xb8\x8f\x8a\x5a\xad\x20\x6e\x9a\xec\x91\x56\x24\xb6\xa4\x67\xb8\xa1\xb6\x85\xff\x19\xb5\x42\xb3\xf2\x40\x90\x39\x2b\x83\x25\xe7\x50\x71\x8e\x16\x61\xbe\x58\xee\x2d\x25\x40\x5a\x97\x1a\x9a\x08\x80\x29\x19\x8b\xcf\x04\xa3\x14\x9e\xc9\x32\x0d\x0a\x70\xb0\xac\x2d\xbc\xd4\xa6\x67\xe2\xf0\x2d\xea\x10\x3f\xe2\x5a\x2f\xa6\x54\xd9\x23\xfe\x9c\x92\x31\x6c\x62\xb7\x28\x5c\x69\x78\x18\x83\xf7\x1d\x19\x78\xf4\x14\xee\x42\x6a\xf2\xce\x47\xfd\x37\x06\x25\xa4\x67\x01\xa0\xc9\xd6\x5a\x39\x3b\x7f\xb6\x7d\x62\x6f\xb9\x3d\xae\x9b\x7d\xc8\x73\x61\x45\xa9\x50\x4e\x2c\x6d\x8c\xd3\x33\xf0\x91\x68\xec\x44\xe5\xb4\x03\xa1\x2c\xdb\x38\x9e\x54\x1e\xfc\xfc\x5b\xa3\xe2\x2a\xb7\x22\xdf\xa5\x70\xbb\x45\xe9\xd8\x65\x5f\x74\x59\x91\xb6\x82\x5c\x1d\xae\x2e\x49\xc5\x1d\x39\x78\xef\xb2\x5c\x3c\xbb\x3a\x76\x57\xfb\x0a\x39\xf3\x53\xc2\x22\x85\xc0\x57\x95\xd6\xc3\x65\x13\x33\xab\xa5\xc4\xa5\x74\x53\xb9\x3b\x92\x73\x29\xce\xdd\x1f\x26\x9b\xb3\xb3\x61\xfa\x88\xc3\x40\x07\x54\x7b\xa5\x1b\x2b\x17\xc0\x6f\x87\xd5\x82\x9e\x56\xe3\x5e\x97\x4d\xc3\x9c\x7c\x44\x7b\xa9\xdf\x55\xed\x2f\x64\x3b\x16\x7f\x33\xea\xf8\x15\xbc\x65\x3f\x52\xe8\x54\x0f\x93\xe8\x24\xeb\x05\x3f\x2c\x8e\xed\xb8\x79\xda\x12\xf3\xdc\x21\x33\x54\x25\xd1\xf2\x63\x32\xab\x35\x6d\xf0\x2b\xbf\x8b\x9b\x2b\x64\xfe\x38\x25\xc6\xe7\xe5\xf3\x75\x87\x55\xbc\xd0\x31\x28\xe1\xfe\x98\x47\xf6\x1d\x65\x4d\x1f\x77\x95\xe6\x45\x67\x60\xb7\x17\x63\xc0\xaa\x62\x99\xe2\x61\x7f\x1a\xba\x48\xa2\x43\xa9\x33\x61\x3b\x30\x66\x10\xb5\x91\xbb\x0a\xd3\xde\x4d\xb8\x7a\x11\x78\xbb\xcb\x7f\xbb\x08\x57\x0e\x42\x0f\x25\x4e\x20\x0e\xc7\x20\x0d\xc7\x20\xf1\x5a\xf8\x23\xc1\xfa\xcd\x17\x0c\x46\xba\xc0\x15\x35\x6d\xd3\x7f\x47\xe7\x2f\x67\x10\x28\xed\xb7\x0a\x7f\xdb\xa2\xc3\x8a\x9c\x16\xc4\x29\xfa\x2a\x74\x68\x02\x61\x76\x9e\xf1\x71\x18\xe1\xcc\x6c\x93\x81\x4d\xee\x34\xf7\x9b\x31\xed\x5d\xa5\x84\x47\x70\x8a\xfb\x1d\x00\x00\xff\xff\x84\xe8\x32\x69\xc1\x05\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{
		}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{
			}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{
			}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{
			}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{
		}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{
		}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{
		}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{
		}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{
		}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{
		}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{
		}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{
		}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{
			}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{
			}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{
			}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{
			}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{
		}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{
		}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{
		}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{
			}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{
			}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

